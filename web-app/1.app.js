(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[,,,function(n,e,t){"use strict";(function(n,r){t.d(e,"Gb",(function(){return S})),t.d(e,"Db",(function(){return O})),t.d(e,"mb",(function(){return A})),t.d(e,"sb",(function(){return B})),t.d(e,"zb",(function(){return P})),t.d(e,"Ab",(function(){return R})),t.d(e,"hb",(function(){return I})),t.d(e,"r",(function(){return T})),t.d(e,"Cb",(function(){return L})),t.d(e,"F",(function(){return N})),t.d(e,"S",(function(){return D})),t.d(e,"t",(function(){return z})),t.d(e,"Q",(function(){return H})),t.d(e,"wb",(function(){return W})),t.d(e,"qb",(function(){return F})),t.d(e,"P",(function(){return $})),t.d(e,"m",(function(){return q})),t.d(e,"H",(function(){return G})),t.d(e,"G",(function(){return U})),t.d(e,"Eb",(function(){return J})),t.d(e,"yb",(function(){return V})),t.d(e,"J",(function(){return Y})),t.d(e,"kb",(function(){return K})),t.d(e,"o",(function(){return Q})),t.d(e,"a",(function(){return X})),t.d(e,"b",(function(){return Z})),t.d(e,"B",(function(){return nn})),t.d(e,"n",(function(){return en})),t.d(e,"g",(function(){return tn})),t.d(e,"ab",(function(){return rn})),t.d(e,"k",(function(){return on})),t.d(e,"j",(function(){return un})),t.d(e,"l",(function(){return cn})),t.d(e,"s",(function(){return sn})),t.d(e,"R",(function(){return dn})),t.d(e,"A",(function(){return fn})),t.d(e,"pb",(function(){return an})),t.d(e,"jb",(function(){return ln})),t.d(e,"x",(function(){return _n})),t.d(e,"fb",(function(){return bn})),t.d(e,"y",(function(){return hn})),t.d(e,"db",(function(){return pn})),t.d(e,"p",(function(){return gn})),t.d(e,"gb",(function(){return wn})),t.d(e,"nb",(function(){return mn})),t.d(e,"ib",(function(){return vn})),t.d(e,"c",(function(){return yn})),t.d(e,"V",(function(){return Cn})),t.d(e,"I",(function(){return En})),t.d(e,"i",(function(){return Mn})),t.d(e,"q",(function(){return Sn})),t.d(e,"T",(function(){return kn})),t.d(e,"Y",(function(){return xn})),t.d(e,"h",(function(){return jn})),t.d(e,"Z",(function(){return On})),t.d(e,"O",(function(){return An})),t.d(e,"D",(function(){return Bn})),t.d(e,"eb",(function(){return Pn})),t.d(e,"d",(function(){return Rn})),t.d(e,"w",(function(){return In})),t.d(e,"U",(function(){return Tn})),t.d(e,"z",(function(){return Ln})),t.d(e,"W",(function(){return Nn})),t.d(e,"ob",(function(){return Dn})),t.d(e,"M",(function(){return zn})),t.d(e,"f",(function(){return Hn})),t.d(e,"L",(function(){return Wn})),t.d(e,"C",(function(){return Fn})),t.d(e,"X",(function(){return $n})),t.d(e,"rb",(function(){return qn})),t.d(e,"u",(function(){return Gn})),t.d(e,"v",(function(){return Un})),t.d(e,"e",(function(){return Jn})),t.d(e,"E",(function(){return Vn})),t.d(e,"K",(function(){return Yn})),t.d(e,"bb",(function(){return Kn})),t.d(e,"N",(function(){return Qn})),t.d(e,"lb",(function(){return Xn})),t.d(e,"cb",(function(){return Zn})),t.d(e,"xb",(function(){return ne})),t.d(e,"vb",(function(){return ee})),t.d(e,"Fb",(function(){return te})),t.d(e,"Bb",(function(){return re})),t.d(e,"tb",(function(){return ie})),t.d(e,"ub",(function(){return oe}));var i=t(20),o=t(9);const u=new Array(32).fill(void 0);function c(n){return u[n]}u.push(void 0,null,!0,!1);let s=u.length;function d(n){const e=c(n);return function(n){n<36||(u[n]=s,s=n)}(n),e}let f=new("undefined"==typeof TextDecoder?(0,n.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});f.decode();let a=null;function l(){return null!==a&&a.buffer===o.i.buffer||(a=new Uint8Array(o.i.buffer)),a}function _(n,e){return f.decode(l().subarray(n,n+e))}function b(n){s===u.length&&u.push(u.length+1);const e=s;return s=u[e],u[e]=n,e}let h=0;let p=new("undefined"==typeof TextEncoder?(0,n.require)("util").TextEncoder:TextEncoder)("utf-8");const g="function"==typeof p.encodeInto?function(n,e){return p.encodeInto(n,e)}:function(n,e){const t=p.encode(n);return e.set(t),{read:n.length,written:t.length}};function w(n,e,t){if(void 0===t){const t=p.encode(n),r=e(t.length);return l().subarray(r,r+t.length).set(t),h=t.length,r}let r=n.length,i=e(r);const o=l();let u=0;for(;u<r;u++){const e=n.charCodeAt(u);if(e>127)break;o[i+u]=e}if(u!==r){0!==u&&(n=n.slice(u)),i=t(i,r,r=u+3*n.length);const e=l().subarray(i+u,i+r);u+=g(n,e).written}return h=u,i}let m=null;function v(){return null!==m&&m.buffer===o.i.buffer||(m=new Int32Array(o.i.buffer)),m}function y(n,e,t,r){const i={a:n,b:e,cnt:1,dtor:t},u=(...n)=>{i.cnt++;const e=i.a;i.a=0;try{return r(e,i.b,...n)}finally{0==--i.cnt?o.b.get(i.dtor)(e,i.b):i.a=e}};return u.original=i,u}function C(n,e){o.h(n,e)}let E=32;function M(n,e,t){try{o.g(n,e,function(n){if(1==E)throw new Error("out of js stack");return u[--E]=n,E}(t))}finally{u[E++]=void 0}}function S(){o.j()}function k(n,e){try{return n.apply(this,e)}catch(n){o.a(b(n))}}function x(n,e){return l().subarray(n/1,n/1+e)}function j(n){return null==n}function O(n){d(n)}function A(n){Object(i.tick)(d(n))}function B(n){const e=d(n).original;if(1==e.cnt--)return e.a=0,!0;return!1}function P(n,e){return b(JSON.parse(_(n,e)))}function R(n,e){const t=c(e);var r=w(JSON.stringify(void 0===t?null:t),o.d,o.e),i=h;v()[n/4+1]=i,v()[n/4+0]=r}function I(n){Object(i.setup)(d(n))}function T(){return b(Object(i.getCameraPosition)())}function L(n){return b(c(n))}function N(n,e){console.log(_(n,e))}function D(){return k((function(n,e,t){c(n).randomFillSync(x(e,t))}),arguments)}function z(){return k((function(n,e){c(n).getRandomValues(c(e))}),arguments)}function H(n){return b(c(n).process)}function W(n){const e=c(n);return"object"==typeof e&&null!==e}function F(n){return b(c(n).versions)}function $(n){return b(c(n).node)}function q(n){return b(c(n).crypto)}function G(n){return b(c(n).msCrypto)}function U(){return k((function(n,e){return b(t(29)(_(n,e)))}),arguments)}function J(n,e){return b(_(n,e))}function V(n){return void 0===c(n)}function Y(){return b(new Error)}function K(n,e){var t=w(c(e).stack,o.d,o.e),r=h;v()[n/4+1]=r,v()[n/4+0]=t}function Q(n,e){try{console.error(_(n,e))}finally{o.c(n,e)}}function X(n){return b(c(n).Window)}function Z(n){return b(c(n).WorkerGlobalScope)}function nn(n){return c(n)instanceof Window}function en(n){var e=c(n).document;return j(e)?0:b(e)}function tn(n,e){c(n).clearInterval(e)}function rn(){return k((function(n,e,t){return c(n).setInterval(c(e),t)}),arguments)}function on(){return k((function(n,e,t){return b(c(n).createElement(_(e,t)))}),arguments)}function un(){return k((function(n,e,t,r,i){return b(c(n).createElementNS(0===e?void 0:_(e,t),_(r,i)))}),arguments)}function cn(n,e,t){return b(c(n).createTextNode(_(e,t)))}function sn(n,e,t){var r=c(n).getElementById(_(e,t));return j(r)?0:b(r)}function dn(){return k((function(n,e,t){var r=c(n).querySelector(_(e,t));return j(r)?0:b(r)}),arguments)}function fn(n){return c(n)instanceof HTMLTextAreaElement}function an(n,e){var t=w(c(e).value,o.d,o.e),r=h;v()[n/4+1]=r,v()[n/4+0]=t}function ln(n,e,t){c(n).value=_(e,t)}function _n(n){return c(n)instanceof HTMLButtonElement}function bn(n,e,t){c(n).type=_(e,t)}function hn(n){return c(n)instanceof HTMLInputElement}function pn(n,e){c(n).checked=0!==e}function gn(n){var e=c(n).files;return j(e)?0:b(e)}function wn(n,e,t){c(n).type=_(e,t)}function mn(n,e){var t=w(c(e).value,o.d,o.e),r=h;v()[n/4+1]=r,v()[n/4+0]=t}function vn(n,e,t){c(n).value=_(e,t)}function yn(){return k((function(n,e,t,r,i){c(n).addEventListener(_(e,t),c(r),c(i))}),arguments)}function Cn(){return k((function(n,e,t,r,i){c(n).removeEventListener(_(e,t),c(r),0!==i)}),arguments)}function En(n,e){var t=c(e).namespaceURI,r=j(t)?0:w(t,o.d,o.e),i=h;v()[n/4+1]=i,v()[n/4+0]=r}function Mn(n){return c(n).clientWidth}function Sn(n,e,t,r){var i=c(e).getAttribute(_(t,r)),u=j(i)?0:w(i,o.d,o.e),s=h;v()[n/4+1]=s,v()[n/4+0]=u}function kn(){return k((function(n,e,t){c(n).removeAttribute(_(e,t))}),arguments)}function xn(){return k((function(n,e,t,r,i){c(n).setAttribute(_(e,t),_(r,i))}),arguments)}function jn(n,e){c(n).clearInterval(e)}function On(){return k((function(n,e,t){return c(n).setInterval(c(e),t)}),arguments)}function An(n,e){var t=w(c(e).nodeName,o.d,o.e),r=h;v()[n/4+1]=r,v()[n/4+0]=t}function Bn(n){var e=c(n).lastChild;return j(e)?0:b(e)}function Pn(n,e,t){c(n).nodeValue=0===e?void 0:_(e,t)}function Rn(){return k((function(n,e){return b(c(n).appendChild(c(e)))}),arguments)}function In(){return k((function(n,e,t){return b(c(n).insertBefore(c(e),c(t)))}),arguments)}function Tn(){return k((function(n,e){return b(c(n).removeChild(c(e)))}),arguments)}function Ln(n){return c(n)instanceof HTMLSelectElement}function Nn(n){return c(n).selectedIndex}function Dn(n,e){var t=w(c(e).value,o.d,o.e),r=h;v()[n/4+1]=r,v()[n/4+0]=t}function zn(n,e){return b(new Function(_(n,e)))}function Hn(){return k((function(n,e){return b(c(n).call(c(e)))}),arguments)}function Wn(){return b(new Object)}function Fn(n,e){return Object.is(c(n),c(e))}function $n(){return k((function(){return b(self.self)}),arguments)}function qn(){return k((function(){return b(window.window)}),arguments)}function Gn(){return k((function(){return b(globalThis.globalThis)}),arguments)}function Un(){return k((function(){return b(r.global)}),arguments)}function Jn(n){return b(c(n).buffer)}function Vn(n){return c(n).length}function Yn(n){return b(new Uint8Array(c(n)))}function Kn(n,e,t){c(n).set(c(e),t>>>0)}function Qn(n){return b(new Uint8Array(n>>>0))}function Xn(n,e,t){return b(c(n).subarray(e>>>0,t>>>0))}function Zn(){return k((function(n,e,t){return Reflect.set(c(n),c(e),c(t))}),arguments)}function ne(n){return"string"==typeof c(n)}function ee(n,e){var t=w(function n(e){const t=typeof e;if("number"==t||"boolean"==t||null==e)return""+e;if("string"==t)return`"${e}"`;if("symbol"==t){const n=e.description;return null==n?"Symbol":`Symbol(${n})`}if("function"==t){const n=e.name;return"string"==typeof n&&n.length>0?`Function(${n})`:"Function"}if(Array.isArray(e)){const t=e.length;let r="[";t>0&&(r+=n(e[0]));for(let i=1;i<t;i++)r+=", "+n(e[i]);return r+="]",r}const r=/\[object ([^\]]+)\]/.exec(toString.call(e));let i;if(!(r.length>1))return toString.call(e);if(i=r[1],"Object"==i)try{return"Object("+JSON.stringify(e)+")"}catch(n){return"Object"}return e instanceof Error?`${e.name}: ${e.message}\n${e.stack}`:i}(c(e)),o.d,o.e),r=h;v()[n/4+1]=r,v()[n/4+0]=t}function te(n,e){throw new Error(_(n,e))}function re(){return b(o.i)}function ie(n,e,t){return b(y(n,e,417,C))}function oe(n,e,t){return b(y(n,e,417,M))}}).call(this,t(18)(n),t(19))},,function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Renderer=void 0;const r=t(4),i=t(21),o=t(6),u=t(22),c=t(25),s=t(27);class d{constructor(n,e){this.sceneRenderer=new r.WebGLRenderer,this.sceneRenderer.setSize(n.clientWidth,n.clientHeight),n.appendChild(this.sceneRenderer.domElement),this.labelRenderer=new o.CSS2DRenderer,this.labelRenderer.setSize(n.clientWidth,n.clientHeight),this.labelRenderer.domElement.style.position="absolute",this.labelRenderer.domElement.style.top="0px",n.appendChild(this.labelRenderer.domElement),this.camera=new r.PerspectiveCamera(75,n.clientWidth/n.clientHeight),this.cameraControls=new i.OrbitControls(this.camera,this.labelRenderer.domElement),this.camera.position.y=50,this.cameraControls.update(),this.scene=new r.Scene,this.scene.add(new r.AxesHelper(1)),this.components=[new u.NodeMarkersComponent(this.scene,e),new c.ConnectionMarkersComponent(this.scene,e),new s.BodyMarkersComponent(this.scene,e)],this.render()}render(){requestAnimationFrame(()=>this.render()),this.sceneRenderer.render(this.scene,this.camera),this.labelRenderer.render(this.scene,this.camera)}update(n){for(const e of this.components)e.update(n)}static simPosToScenePos(n){return new r.Vector3(n.x*d.MASTER_SCALE,n.y*d.MASTER_SCALE,n.z*d.MASTER_SCALE)}}e.Renderer=d,d.MASTER_SCALE=1e5/1496e8},,function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Component=void 0;e.Component=class{constructor(n){this.scene=n}}},,function(n,e,t){"use strict";var r=t.w[n.i];n.exports=r;t(3);r.k()},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.zip=void 0,e.zip=function(...n){return[...n[0].keys()].map(e=>n.map(n=>n[e]))}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BodyMarker=void 0;const r=t(6),i=t(5),o=t(28);class u{constructor(n,e){this.mesh=o.getBodyMesh(e),n.add(this.mesh);const t=document.createElement("div");t.className="text-light",t.textContent=e.name,this.label=new r.CSS2DObject(t),this.label.position.set(0,0,0),this.mesh.add(this.label)}update(n){this.mesh.position.copy(i.Renderer.simPosToScenePos(n.position))}}e.BodyMarker=u,u.BODY_SCALE=1},,,,,,,,,function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getCameraPosition=e.tick=e.setup=void 0;const r=t(5);let i;e.setup=function(n){i=new r.Renderer(document.getElementById("renderer-wrapper"),n)},e.tick=function(n){i.update(n)},e.getCameraPosition=function(){return i.camera.position.clone().divideScalar(r.Renderer.MASTER_SCALE)}},,function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.NodeMarkersComponent=void 0;const r=t(7),i=t(4),o=t(23),u=t(10);class c extends r.Component{constructor(n,e){super(n),this.markers=u.zip(e.nodes).map(([n,e])=>new o.NodeMarker(this.scene,n))}update(n){for(const[e,t,r]of u.zip(this.markers,n.nodes,n.messageBufferOccupancies))e.update(t,r),e.occluded=!1,e.highlighted=!1;for(const e of n.creatingNodeIndices)this.markers[e].addSplash(new i.Color("green"));for(const e of n.deliveringNodeIndices)this.markers[e].addSplash(new i.Color("green"),!1);for(const e of n.occludedNodeIndices)this.markers[e].occluded=!0;null!=n.highlightedNodeIndex&&(this.markers[n.highlightedNodeIndex].highlighted=!0)}}e.NodeMarkersComponent=c},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.NodeMarker=void 0;const r=t(4),i=t(6),o=t(5),u=t(24);e.NodeMarker=class{constructor(n,e){this.pathPoints=[],this.splashes=[],this.updateIndex=0,this.mesh=new r.Mesh,n.add(this.mesh),this.path=new r.Line(new r.BufferGeometry,new r.LineBasicMaterial({color:16711680})),n.add(this.path),this.labelDiv=document.createElement("div"),this.labelDiv.innerHTML=`\n<div class="col" style="position: relative; width: 100px; height: 1.5em;">\n    <div class="progress w-100 h-100 position-absolute top-0 start-0">\n        <div id="${e.name}-occupancy-bar" class="progress-bar bg-primary" style="z-index: inherit"></div>\n    </div>\n    <div class="w-100 text-center position-absolute top-50 start-50 translate-middle">${e.name}</div>\n</div>\n`,this.label=new i.CSS2DObject(this.labelDiv),this.label.position.set(0,0,0),this.mesh.add(this.label)}addSplash(n,e=!0){this.splashes.push(new u.Splash(this.mesh,n,e))}update(n,e){const t=o.Renderer.simPosToScenePos(n.position);this.mesh.position.copy(t),this.updateIndex%10==0&&(this.pathPoints.push(t),this.pathPoints.length>1e3&&this.pathPoints.shift()),this.path.geometry.setFromPoints(this.pathPoints);for(const n of this.splashes)n.update();this.splashes=this.splashes.filter(n=>n.alive),null==this.occupancyBar&&(this.occupancyBar=document.getElementById(n.name+"-occupancy-bar")),this.occupancyBar.style.width=100*e+"%",this.updateIndex++}set occluded(n){const[e,t]=n?["0.5","progress-bar bg-secondary"]:["1","progress-bar"];this.labelDiv.style.opacity=e,null!=this.occupancyBar&&(this.occupancyBar.className=t)}set highlighted(n){const e=n?"0 0 30px white":"none";this.labelDiv.style.boxShadow=e}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Splash=void 0;const r=t(6);e.Splash=class{constructor(n,e,t=!0){this.mesh=n,this.color=e,this.expanding=t,this.life=1,this.alive=!0,this.htmlElement=document.createElement("div"),this.htmlElement.style.borderRadius="50%",this.htmlElement.style.borderStyle="solid",this.htmlElement.style.zIndex="1",this.cssObject=new r.CSS2DObject(this.htmlElement),this.updateStyle(),this.mesh.add(this.cssObject)}updateStyle(){this.htmlElement.style.borderColor=`rgba(${255*this.color.r}, ${255*this.color.g}, ${255*this.color.b}, ${2*this.life})`;const n=100*(this.expanding?1-this.life:this.life);this.htmlElement.style.width=n+"px",this.htmlElement.style.height=n+"px",this.htmlElement.style.borderWidth=10*(this.expanding?this.life:1-this.life)+"px"}update(){this.life*=.9,this.updateStyle(),this.life<.01&&(this.alive=!1,this.mesh.remove(this.cssObject))}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ConnectionMarkersComponent=void 0;const r=t(7),i=t(5),o=t(26);class u extends r.Component{constructor(n,e){super(n),this.markers=[]}update(n){for(const n of this.markers)if(null!=n)for(const e of n)null!=e&&(e.update(),e.visible=!1);for(const[e,t]of n.connectableNodeIndices){const r=this.getMarker(e,t);r.visible=!0,r.points=[i.Renderer.simPosToScenePos(n.nodes[e].position),i.Renderer.simPosToScenePos(n.nodes[t].position)]}for(const[e,t]of n.sendingNodeIndices){this.getMarker(e,t).sending=1}}getMarker(n,e){let t=this.markers[n];null==t&&(t=this.markers[n]=[]);let r=t[e];return null==r&&(r=t[e]=new o.ConnectionMarker(this.scene)),r}}e.ConnectionMarkersComponent=u},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ConnectionMarker=void 0;const r=t(4);class i{constructor(n){this.lineMaterial=new r.LineBasicMaterial({color:i.connectingLineColor.clone()}),this.line=new r.Line(void 0,this.lineMaterial),n.add(this.line),this.sending=0}set points(n){this.line.geometry.setFromPoints(n)}set visible(n){this.line.visible=n}update(){this.sending*=.9,this.lineMaterial.color=i.connectingLineColor.clone().lerp(i.sendingLineColor,this.sending)}}e.ConnectionMarker=i,i.connectingLineColor=new r.Color(255),i.sendingLineColor=new r.Color(65280)},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BodyMarkersComponent=void 0;const r=t(7),i=t(10),o=t(11);class u extends r.Component{constructor(n,e){super(n),this.markers=e.bodies.map(n=>new o.BodyMarker(this.scene,n))}update(n){for(const[e,t]of i.zip(this.markers,n.bodies))e.update(t)}}e.BodyMarkersComponent=u},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getBodyMesh=void 0;const r=t(4),i=t(5),o=t(11),u=new r.MeshBasicMaterial({color:65280}),c=new r.TextureLoader;e.getBodyMesh=function(n){const e=n.name.toLowerCase(),t=s[e];return new r.Mesh((c=n.radius,new r.SphereGeometry(c*i.Renderer.MASTER_SCALE*o.BodyMarker.BODY_SCALE,64,32)),t?t(e):u);var c};const s={mercury:d,venus:d,earth:d,mars:d,jupiter:d,saturn:()=>[d("saturn"),d("saturn_ring",!1,r.DoubleSide)],uranus:d,neptune:d};function d(n,e=!1,t=r.FrontSide){return new r.MeshBasicMaterial({map:c.load(`/textures/${n}_color.jpg`),alphaMap:e?c.load(`/textures/${n}_alpha.jpg`):null,transparent:e,side:t})}},function(n,e){function t(n){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}t.keys=function(){return[]},t.resolve=t,n.exports=t,t.id=29},,function(n,e,t){"use strict";t.r(e);var r=t(9),i=t(3);t.d(e,"run_app",(function(){return i.Gb})),t.d(e,"__wbindgen_object_drop_ref",(function(){return i.Db})),t.d(e,"__wbg_tick_bffce5c7df6681d7",(function(){return i.mb})),t.d(e,"__wbindgen_cb_drop",(function(){return i.sb})),t.d(e,"__wbindgen_json_parse",(function(){return i.zb})),t.d(e,"__wbindgen_json_serialize",(function(){return i.Ab})),t.d(e,"__wbg_setup_a79ad26b92357792",(function(){return i.hb})),t.d(e,"__wbg_getCameraPosition_a46568126ca56988",(function(){return i.r})),t.d(e,"__wbindgen_object_clone_ref",(function(){return i.Cb})),t.d(e,"__wbg_log_9864bbce47844bb8",(function(){return i.F})),t.d(e,"__wbg_randomFillSync_64cc7d048f228ca8",(function(){return i.S})),t.d(e,"__wbg_getRandomValues_98117e9a7e993920",(function(){return i.t})),t.d(e,"__wbg_process_2f24d6544ea7b200",(function(){return i.Q})),t.d(e,"__wbindgen_is_object",(function(){return i.wb})),t.d(e,"__wbg_versions_6164651e75405d4a",(function(){return i.qb})),t.d(e,"__wbg_node_4b517d861cbcb3bc",(function(){return i.P})),t.d(e,"__wbg_crypto_98fc271021c7d2ad",(function(){return i.m})),t.d(e,"__wbg_msCrypto_a2cdb043d2bfe57f",(function(){return i.H})),t.d(e,"__wbg_modulerequire_3440a4bcf44437db",(function(){return i.G})),t.d(e,"__wbindgen_string_new",(function(){return i.Eb})),t.d(e,"__wbindgen_is_undefined",(function(){return i.yb})),t.d(e,"__wbg_new_59cb74e423758ede",(function(){return i.J})),t.d(e,"__wbg_stack_558ba5917b466edd",(function(){return i.kb})),t.d(e,"__wbg_error_4bb6c2a97407129a",(function(){return i.o})),t.d(e,"__wbg_Window_f826a1dec163bacb",(function(){return i.a})),t.d(e,"__wbg_WorkerGlobalScope_967d186155183d38",(function(){return i.b})),t.d(e,"__wbg_instanceof_Window_b99429ec408dcb8d",(function(){return i.B})),t.d(e,"__wbg_document_6d5890b86bbf5b96",(function(){return i.n})),t.d(e,"__wbg_clearInterval_1c51452f493daf1e",(function(){return i.g})),t.d(e,"__wbg_setInterval_6cabb60042acd928",(function(){return i.ab})),t.d(e,"__wbg_createElement_1959ce882284e011",(function(){return i.k})),t.d(e,"__wbg_createElementNS_3be57b8d0c7c13e5",(function(){return i.j})),t.d(e,"__wbg_createTextNode_f7bda14307602217",(function(){return i.l})),t.d(e,"__wbg_getElementById_f059b7401a23ee7c",(function(){return i.s})),t.d(e,"__wbg_querySelector_753e1037740f7379",(function(){return i.R})),t.d(e,"__wbg_instanceof_HtmlTextAreaElement_ea178ae1108bf8ce",(function(){return i.A})),t.d(e,"__wbg_value_f840140562e0314a",(function(){return i.pb})),t.d(e,"__wbg_setvalue_d846870dad1c9e0a",(function(){return i.jb})),t.d(e,"__wbg_instanceof_HtmlButtonElement_c53a8ed80134e375",(function(){return i.x})),t.d(e,"__wbg_settype_791beef0000789d0",(function(){return i.fb})),t.d(e,"__wbg_instanceof_HtmlInputElement_a8acc6294a4325d1",(function(){return i.y})),t.d(e,"__wbg_setchecked_c756ef801f7e9fe2",(function(){return i.db})),t.d(e,"__wbg_files_bd0c448cfede922a",(function(){return i.p})),t.d(e,"__wbg_settype_8c7f99d4688c6c4b",(function(){return i.gb})),t.d(e,"__wbg_value_45a0a66acf34bf56",(function(){return i.nb})),t.d(e,"__wbg_setvalue_6671cc5ed4e50ed1",(function(){return i.ib})),t.d(e,"__wbg_addEventListener_49e90ff539b1b667",(function(){return i.c})),t.d(e,"__wbg_removeEventListener_736c8c70f9ffc4dd",(function(){return i.V})),t.d(e,"__wbg_namespaceURI_089af8a31634d16c",(function(){return i.I})),t.d(e,"__wbg_clientWidth_d8f9a7f844bfbba5",(function(){return i.i})),t.d(e,"__wbg_getAttribute_a950580aa8f3dfc6",(function(){return i.q})),t.d(e,"__wbg_removeAttribute_96fc7d7e36217fe8",(function(){return i.T})),t.d(e,"__wbg_setAttribute_c44888e5d6dd5133",(function(){return i.Y})),t.d(e,"__wbg_clearInterval_785b6e1184064763",(function(){return i.h})),t.d(e,"__wbg_setInterval_30abc9932fa7c5ba",(function(){return i.Z})),t.d(e,"__wbg_nodeName_ebe01173f6d80fef",(function(){return i.O})),t.d(e,"__wbg_lastChild_44be906ccfbaaf0a",(function(){return i.D})),t.d(e,"__wbg_setnodeValue_e010a84aec8acf4e",(function(){return i.eb})),t.d(e,"__wbg_appendChild_27974267a42a0def",(function(){return i.d})),t.d(e,"__wbg_insertBefore_379529a4da6a1947",(function(){return i.w})),t.d(e,"__wbg_removeChild_73ae1495cb167dcd",(function(){return i.U})),t.d(e,"__wbg_instanceof_HtmlSelectElement_ae5a047e555dadfa",(function(){return i.z})),t.d(e,"__wbg_selectedIndex_01f1e29177bc19fb",(function(){return i.W})),t.d(e,"__wbg_value_5ab0a3ac11e49596",(function(){return i.ob})),t.d(e,"__wbg_newnoargs_68424965d85fcb08",(function(){return i.M})),t.d(e,"__wbg_call_9698e9b9c4668ae0",(function(){return i.f})),t.d(e,"__wbg_new_ffb8fbe0ad5d4d2f",(function(){return i.L})),t.d(e,"__wbg_is_744cc9b6515ff95a",(function(){return i.C})),t.d(e,"__wbg_self_3df7c33e222cd53b",(function(){return i.X})),t.d(e,"__wbg_window_0f90182e6c405ff2",(function(){return i.rb})),t.d(e,"__wbg_globalThis_787cfd4f25a35141",(function(){return i.u})),t.d(e,"__wbg_global_af2eb7b1369372ed",(function(){return i.v})),t.d(e,"__wbg_buffer_eb2155f17856c20b",(function(){return i.e})),t.d(e,"__wbg_length_0b194abde938d0c6",(function(){return i.E})),t.d(e,"__wbg_new_ff8b26f7b2d7e2fb",(function(){return i.K})),t.d(e,"__wbg_set_67cdd115b9cb141f",(function(){return i.bb})),t.d(e,"__wbg_newwithlength_a49b32b2030b93c3",(function(){return i.N})),t.d(e,"__wbg_subarray_1bb315d30e0c968c",(function(){return i.lb})),t.d(e,"__wbg_set_c7fc8735d70ceb11",(function(){return i.cb})),t.d(e,"__wbindgen_is_string",(function(){return i.xb})),t.d(e,"__wbindgen_debug_string",(function(){return i.vb})),t.d(e,"__wbindgen_throw",(function(){return i.Fb})),t.d(e,"__wbindgen_memory",(function(){return i.Bb})),t.d(e,"__wbindgen_closure_wrapper988",(function(){return i.tb})),t.d(e,"__wbindgen_closure_wrapper990",(function(){return i.ub})),r.f()}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wa2cvaW5kZXhfYmcuanMiLCJ3ZWJwYWNrOi8vLy4vdHMvcmVuZGVyZXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vdHMvcmVuZGVyZXIvY29tcG9uZW50LnRzIiwid2VicGFjazovLy8uL3RzL3V0aWxzLnRzIiwid2VicGFjazovLy8uL3RzL3JlbmRlcmVyL2NvbXBvbmVudHMvYm9keU1hcmtlcnNDb21wb25lbnQvYm9keU1hcmtlci50cyIsIndlYnBhY2s6Ly8vLi9wa2cvc25pcHBldHMvaXBuX3NpbV93ZWJfYXBwLWRjNjE4YmRhZWE4NTU1MGYvdHMvYmluZGluZ3MudHMiLCJ3ZWJwYWNrOi8vLy4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9ub2RlTWFya2Vyc0NvbXBvbmVudC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi90cy9yZW5kZXJlci9jb21wb25lbnRzL25vZGVNYXJrZXJzQ29tcG9uZW50L25vZGVNYXJrZXIudHMiLCJ3ZWJwYWNrOi8vLy4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9ub2RlTWFya2Vyc0NvbXBvbmVudC9zcGxhc2gudHMiLCJ3ZWJwYWNrOi8vLy4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9jb25uZWN0aW9uTWFya2Vyc0NvbXBvbmVudC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi90cy9yZW5kZXJlci9jb21wb25lbnRzL2Nvbm5lY3Rpb25NYXJrZXJzQ29tcG9uZW50L2Nvbm5lY3Rpb25NYXJrZXIudHMiLCJ3ZWJwYWNrOi8vLy4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9ib2R5TWFya2Vyc0NvbXBvbmVudC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi90cy9yZW5kZXJlci9jb21wb25lbnRzL2JvZHlNYXJrZXJzQ29tcG9uZW50L2JvZHlNZXNoLnRzIiwid2VicGFjazovLy8uL3BrZyBzeW5jIiwid2VicGFjazovLy8uL3BrZy9pbmRleC5qcyJdLCJuYW1lcyI6WyJoZWFwIiwiQXJyYXkiLCJmaWxsIiwidW5kZWZpbmVkIiwiZ2V0T2JqZWN0IiwiaWR4IiwicHVzaCIsImhlYXBfbmV4dCIsImxlbmd0aCIsInRha2VPYmplY3QiLCJyZXQiLCJkcm9wT2JqZWN0IiwiY2FjaGVkVGV4dERlY29kZXIiLCJUZXh0RGVjb2RlciIsIm1vZHVsZSIsInJlcXVpcmUiLCJpZ25vcmVCT00iLCJmYXRhbCIsImRlY29kZSIsImNhY2hlZ2V0VWludDhNZW1vcnkwIiwiZ2V0VWludDhNZW1vcnkwIiwiYnVmZmVyIiwiVWludDhBcnJheSIsImdldFN0cmluZ0Zyb21XYXNtMCIsInB0ciIsImxlbiIsInN1YmFycmF5IiwiYWRkSGVhcE9iamVjdCIsIm9iaiIsIldBU01fVkVDVE9SX0xFTiIsImNhY2hlZFRleHRFbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJlbmNvZGVTdHJpbmciLCJlbmNvZGVJbnRvIiwiYXJnIiwidmlldyIsImJ1ZiIsImVuY29kZSIsInNldCIsInJlYWQiLCJ3cml0dGVuIiwicGFzc1N0cmluZ1RvV2FzbTAiLCJtYWxsb2MiLCJyZWFsbG9jIiwibWVtIiwib2Zmc2V0IiwiY29kZSIsImNoYXJDb2RlQXQiLCJzbGljZSIsImNhY2hlZ2V0SW50MzJNZW1vcnkwIiwiZ2V0SW50MzJNZW1vcnkwIiwiSW50MzJBcnJheSIsIm1ha2VNdXRDbG9zdXJlIiwiYXJnMCIsImFyZzEiLCJkdG9yIiwiZiIsInN0YXRlIiwiYSIsImIiLCJjbnQiLCJyZWFsIiwiYXJncyIsImdldCIsIm9yaWdpbmFsIiwiX193YmdfYWRhcHRlcl8yNiIsInN0YWNrX3BvaW50ZXIiLCJfX3diZ19hZGFwdGVyXzI5IiwiYXJnMiIsIkVycm9yIiwiYWRkQm9ycm93ZWRPYmplY3QiLCJydW5fYXBwIiwiaGFuZGxlRXJyb3IiLCJhcHBseSIsInRoaXMiLCJlIiwiZ2V0QXJyYXlVOEZyb21XYXNtMCIsImlzTGlrZU5vbmUiLCJ4IiwiX193YmluZGdlbl9vYmplY3RfZHJvcF9yZWYiLCJfX3diZ190aWNrX2JmZmNlNWM3ZGY2NjgxZDciLCJfX3diaW5kZ2VuX2NiX2Ryb3AiLCJfX3diaW5kZ2VuX2pzb25fcGFyc2UiLCJKU09OIiwicGFyc2UiLCJfX3diaW5kZ2VuX2pzb25fc2VyaWFsaXplIiwicHRyMCIsInN0cmluZ2lmeSIsImxlbjAiLCJfX3diZ19zZXR1cF9hNzlhZDI2YjkyMzU3NzkyIiwiX193YmdfZ2V0Q2FtZXJhUG9zaXRpb25fYTQ2NTY4MTI2Y2E1Njk4OCIsIl9fd2JpbmRnZW5fb2JqZWN0X2Nsb25lX3JlZiIsIl9fd2JnX2xvZ185ODY0YmJjZTQ3ODQ0YmI4IiwiY29uc29sZSIsImxvZyIsIl9fd2JnX3JhbmRvbUZpbGxTeW5jXzY0Y2M3ZDA0OGYyMjhjYTgiLCJyYW5kb21GaWxsU3luYyIsImFyZ3VtZW50cyIsIl9fd2JnX2dldFJhbmRvbVZhbHVlc185ODExN2U5YTdlOTkzOTIwIiwiZ2V0UmFuZG9tVmFsdWVzIiwiX193YmdfcHJvY2Vzc18yZjI0ZDY1NDRlYTdiMjAwIiwicHJvY2VzcyIsIl9fd2JpbmRnZW5faXNfb2JqZWN0IiwidmFsIiwiX193YmdfdmVyc2lvbnNfNjE2NDY1MWU3NTQwNWQ0YSIsInZlcnNpb25zIiwiX193Ymdfbm9kZV80YjUxN2Q4NjFjYmNiM2JjIiwibm9kZSIsIl9fd2JnX2NyeXB0b185OGZjMjcxMDIxYzdkMmFkIiwiY3J5cHRvIiwiX193YmdfbXNDcnlwdG9fYTJjZGIwNDNkMmJmZTU3ZiIsIm1zQ3J5cHRvIiwiX193YmdfbW9kdWxlcmVxdWlyZV8zNDQwYTRiY2Y0NDQzN2RiIiwiX193YmluZGdlbl9zdHJpbmdfbmV3IiwiX193YmluZGdlbl9pc191bmRlZmluZWQiLCJfX3diZ19uZXdfNTljYjc0ZTQyMzc1OGVkZSIsIl9fd2JnX3N0YWNrXzU1OGJhNTkxN2I0NjZlZGQiLCJzdGFjayIsIl9fd2JnX2Vycm9yXzRiYjZjMmE5NzQwNzEyOWEiLCJlcnJvciIsIl9fd2JnX1dpbmRvd19mODI2YTFkZWMxNjNiYWNiIiwiV2luZG93IiwiX193YmdfV29ya2VyR2xvYmFsU2NvcGVfOTY3ZDE4NjE1NTE4M2QzOCIsIldvcmtlckdsb2JhbFNjb3BlIiwiX193YmdfaW5zdGFuY2VvZl9XaW5kb3dfYjk5NDI5ZWM0MDhkY2I4ZCIsIl9fd2JnX2RvY3VtZW50XzZkNTg5MGI4NmJiZjViOTYiLCJkb2N1bWVudCIsIl9fd2JnX2NsZWFySW50ZXJ2YWxfMWM1MTQ1MmY0OTNkYWYxZSIsImNsZWFySW50ZXJ2YWwiLCJfX3diZ19zZXRJbnRlcnZhbF82Y2FiYjYwMDQyYWNkOTI4Iiwic2V0SW50ZXJ2YWwiLCJfX3diZ19jcmVhdGVFbGVtZW50XzE5NTljZTg4MjI4NGUwMTEiLCJjcmVhdGVFbGVtZW50IiwiX193YmdfY3JlYXRlRWxlbWVudE5TXzNiZTU3YjhkMGM3YzEzZTUiLCJhcmczIiwiYXJnNCIsImNyZWF0ZUVsZW1lbnROUyIsIl9fd2JnX2NyZWF0ZVRleHROb2RlX2Y3YmRhMTQzMDc2MDIyMTciLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2JnX2dldEVsZW1lbnRCeUlkX2YwNTliNzQwMWEyM2VlN2MiLCJnZXRFbGVtZW50QnlJZCIsIl9fd2JnX3F1ZXJ5U2VsZWN0b3JfNzUzZTEwMzc3NDBmNzM3OSIsInF1ZXJ5U2VsZWN0b3IiLCJfX3diZ19pbnN0YW5jZW9mX0h0bWxUZXh0QXJlYUVsZW1lbnRfZWExNzhhZTExMDhiZjhjZSIsIkhUTUxUZXh0QXJlYUVsZW1lbnQiLCJfX3diZ192YWx1ZV9mODQwMTQwNTYyZTAzMTRhIiwidmFsdWUiLCJfX3diZ19zZXR2YWx1ZV9kODQ2ODcwZGFkMWM5ZTBhIiwiX193YmdfaW5zdGFuY2VvZl9IdG1sQnV0dG9uRWxlbWVudF9jNTNhOGVkODAxMzRlMzc1IiwiSFRNTEJ1dHRvbkVsZW1lbnQiLCJfX3diZ19zZXR0eXBlXzc5MWJlZWYwMDAwNzg5ZDAiLCJ0eXBlIiwiX193YmdfaW5zdGFuY2VvZl9IdG1sSW5wdXRFbGVtZW50X2E4YWNjNjI5NGE0MzI1ZDEiLCJIVE1MSW5wdXRFbGVtZW50IiwiX193Ymdfc2V0Y2hlY2tlZF9jNzU2ZWY4MDFmN2U5ZmUyIiwiY2hlY2tlZCIsIl9fd2JnX2ZpbGVzX2JkMGM0NDhjZmVkZTkyMmEiLCJmaWxlcyIsIl9fd2JnX3NldHR5cGVfOGM3Zjk5ZDQ2ODhjNmM0YiIsIl9fd2JnX3ZhbHVlXzQ1YTBhNjZhY2YzNGJmNTYiLCJfX3diZ19zZXR2YWx1ZV82NjcxY2M1ZWQ0ZTUwZWQxIiwiX193YmdfYWRkRXZlbnRMaXN0ZW5lcl80OWU5MGZmNTM5YjFiNjY3IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9fd2JnX3JlbW92ZUV2ZW50TGlzdGVuZXJfNzM2YzhjNzBmOWZmYzRkZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfX3diZ19uYW1lc3BhY2VVUklfMDg5YWY4YTMxNjM0ZDE2YyIsIm5hbWVzcGFjZVVSSSIsIl9fd2JnX2NsaWVudFdpZHRoX2Q4ZjlhN2Y4NDRiZmJiYTUiLCJjbGllbnRXaWR0aCIsIl9fd2JnX2dldEF0dHJpYnV0ZV9hOTUwNTgwYWE4ZjNkZmM2IiwiZ2V0QXR0cmlidXRlIiwiX193YmdfcmVtb3ZlQXR0cmlidXRlXzk2ZmM3ZDdlMzYyMTdmZTgiLCJyZW1vdmVBdHRyaWJ1dGUiLCJfX3diZ19zZXRBdHRyaWJ1dGVfYzQ0ODg4ZTVkNmRkNTEzMyIsInNldEF0dHJpYnV0ZSIsIl9fd2JnX2NsZWFySW50ZXJ2YWxfNzg1YjZlMTE4NDA2NDc2MyIsIl9fd2JnX3NldEludGVydmFsXzMwYWJjOTkzMmZhN2M1YmEiLCJfX3diZ19ub2RlTmFtZV9lYmUwMTE3M2Y2ZDgwZmVmIiwibm9kZU5hbWUiLCJfX3diZ19sYXN0Q2hpbGRfNDRiZTkwNmNjZmJhYWYwYSIsImxhc3RDaGlsZCIsIl9fd2JnX3NldG5vZGVWYWx1ZV9lMDEwYTg0YWVjOGFjZjRlIiwibm9kZVZhbHVlIiwiX193YmdfYXBwZW5kQ2hpbGRfMjc5NzQyNjdhNDJhMGRlZiIsImFwcGVuZENoaWxkIiwiX193YmdfaW5zZXJ0QmVmb3JlXzM3OTUyOWE0ZGE2YTE5NDciLCJpbnNlcnRCZWZvcmUiLCJfX3diZ19yZW1vdmVDaGlsZF83M2FlMTQ5NWNiMTY3ZGNkIiwicmVtb3ZlQ2hpbGQiLCJfX3diZ19pbnN0YW5jZW9mX0h0bWxTZWxlY3RFbGVtZW50X2FlNWEwNDdlNTU1ZGFkZmEiLCJIVE1MU2VsZWN0RWxlbWVudCIsIl9fd2JnX3NlbGVjdGVkSW5kZXhfMDFmMWUyOTE3N2JjMTlmYiIsInNlbGVjdGVkSW5kZXgiLCJfX3diZ192YWx1ZV81YWIwYTNhYzExZTQ5NTk2IiwiX193YmdfbmV3bm9hcmdzXzY4NDI0OTY1ZDg1ZmNiMDgiLCJGdW5jdGlvbiIsIl9fd2JnX2NhbGxfOTY5OGU5YjljNDY2OGFlMCIsImNhbGwiLCJfX3diZ19uZXdfZmZiOGZiZTBhZDVkNGQyZiIsIk9iamVjdCIsIl9fd2JnX2lzXzc0NGNjOWI2NTE1ZmY5NWEiLCJpcyIsIl9fd2JnX3NlbGZfM2RmN2MzM2UyMjJjZDUzYiIsInNlbGYiLCJfX3diZ193aW5kb3dfMGY5MDE4MmU2YzQwNWZmMiIsIndpbmRvdyIsIl9fd2JnX2dsb2JhbFRoaXNfNzg3Y2ZkNGYyNWEzNTE0MSIsImdsb2JhbFRoaXMiLCJfX3diZ19nbG9iYWxfYWYyZWI3YjEzNjkzNzJlZCIsImdsb2JhbCIsIl9fd2JnX2J1ZmZlcl9lYjIxNTVmMTc4NTZjMjBiIiwiX193YmdfbGVuZ3RoXzBiMTk0YWJkZTkzOGQwYzYiLCJfX3diZ19uZXdfZmY4YjI2ZjdiMmQ3ZTJmYiIsIl9fd2JnX3NldF82N2NkZDExNWI5Y2IxNDFmIiwiX193YmdfbmV3d2l0aGxlbmd0aF9hNDliMzJiMjAzMGI5M2MzIiwiX193Ymdfc3ViYXJyYXlfMWJiMzE1ZDMwZTBjOTY4YyIsIl9fd2JnX3NldF9jN2ZjODczNWQ3MGNlYjExIiwiUmVmbGVjdCIsIl9fd2JpbmRnZW5faXNfc3RyaW5nIiwiX193YmluZGdlbl9kZWJ1Z19zdHJpbmciLCJkZWJ1Z1N0cmluZyIsImRlc2NyaXB0aW9uIiwibmFtZSIsImlzQXJyYXkiLCJkZWJ1ZyIsImkiLCJidWlsdEluTWF0Y2hlcyIsImV4ZWMiLCJ0b1N0cmluZyIsImNsYXNzTmFtZSIsIl8iLCJtZXNzYWdlIiwiX193YmluZGdlbl90aHJvdyIsIl9fd2JpbmRnZW5fbWVtb3J5IiwiX193YmluZGdlbl9jbG9zdXJlX3dyYXBwZXI5ODgiLCJfX3diaW5kZ2VuX2Nsb3N1cmVfd3JhcHBlcjk5MCIsIlJlbmRlcmVyIiwicmVuZGVyV3JhcHBlciIsInNldHVwRGF0YSIsInNjZW5lUmVuZGVyZXIiLCJUSFJFRSIsIldlYkdMUmVuZGVyZXIiLCJzZXRTaXplIiwiY2xpZW50SGVpZ2h0IiwiZG9tRWxlbWVudCIsImxhYmVsUmVuZGVyZXIiLCJDU1MyRFJlbmRlcmVyIiwic3R5bGUiLCJwb3NpdGlvbiIsInRvcCIsImNhbWVyYSIsIlBlcnNwZWN0aXZlQ2FtZXJhIiwiY2FtZXJhQ29udHJvbHMiLCJPcmJpdENvbnRyb2xzIiwieSIsInVwZGF0ZSIsInNjZW5lIiwiU2NlbmUiLCJhZGQiLCJBeGVzSGVscGVyIiwiY29tcG9uZW50cyIsIk5vZGVNYXJrZXJzQ29tcG9uZW50IiwiQ29ubmVjdGlvbk1hcmtlcnNDb21wb25lbnQiLCJCb2R5TWFya2Vyc0NvbXBvbmVudCIsInJlbmRlciIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImRhdGEiLCJjb21wb25lbnQiLCJzdGF0ZVBvc2l0aW9uIiwiVmVjdG9yMyIsIk1BU1RFUl9TQ0FMRSIsInoiLCJhcnJheXMiLCJrZXlzIiwibWFwIiwiYXJyYXkiLCJCb2R5TWFya2VyIiwiYm9keURhdGEiLCJtZXNoIiwiZ2V0Qm9keU1lc2giLCJsYWJlbERpdiIsInRleHRDb250ZW50IiwibGFiZWwiLCJDU1MyRE9iamVjdCIsImNvcHkiLCJzaW1Qb3NUb1NjZW5lUG9zIiwiQk9EWV9TQ0FMRSIsInJlbmRlcmVyIiwiY2xvbmUiLCJkaXZpZGVTY2FsYXIiLCJDb21wb25lbnQiLCJzdXBlciIsIm1hcmtlcnMiLCJ6aXAiLCJub2RlcyIsInBhdGgiLCJOb2RlTWFya2VyIiwibWFya2VyIiwibWVzc2FnZUJ1ZmZlck9jY3VwYW5jeSIsIm1lc3NhZ2VCdWZmZXJPY2N1cGFuY2llcyIsIm9jY2x1ZGVkIiwiaGlnaGxpZ2h0ZWQiLCJjcmVhdGluZ05vZGVJbmRleCIsImNyZWF0aW5nTm9kZUluZGljZXMiLCJhZGRTcGxhc2giLCJDb2xvciIsImRlbGl2ZXJpbmdOb2RlSW5kaWNlcyIsIm9jY2x1ZGVkTm9kZUluZGV4Iiwib2NjbHVkZWROb2RlSW5kaWNlcyIsImhpZ2hsaWdodGVkTm9kZUluZGV4Iiwibm9kZURhdGEiLCJwYXRoUG9pbnRzIiwic3BsYXNoZXMiLCJ1cGRhdGVJbmRleCIsIk1lc2giLCJMaW5lIiwiQnVmZmVyR2VvbWV0cnkiLCJMaW5lQmFzaWNNYXRlcmlhbCIsImNvbG9yIiwiaW5uZXJIVE1MIiwiZXhwYW5kaW5nIiwiU3BsYXNoIiwiYnVmZmVyT2NjdXBhbmN5Iiwic2hpZnQiLCJnZW9tZXRyeSIsInNldEZyb21Qb2ludHMiLCJzcGxhc2giLCJmaWx0ZXIiLCJhbGl2ZSIsIm9jY3VwYW5jeUJhciIsIndpZHRoIiwib3BhY2l0eSIsInNoYWRvdyIsImJveFNoYWRvdyIsImxpZmUiLCJodG1sRWxlbWVudCIsImJvcmRlclJhZGl1cyIsImJvcmRlclN0eWxlIiwiekluZGV4IiwiY3NzT2JqZWN0IiwidXBkYXRlU3R5bGUiLCJib3JkZXJDb2xvciIsInIiLCJnIiwic2l6ZSIsImhlaWdodCIsImJvcmRlcldpZHRoIiwicmVtb3ZlIiwidmlzaWJsZSIsImluZGV4MSIsImluZGV4MiIsImNvbm5lY3RhYmxlTm9kZUluZGljZXMiLCJnZXRNYXJrZXIiLCJwb2ludHMiLCJzZW5kaW5nTm9kZUluZGljZXMiLCJzZW5kaW5nIiwiQ29ubmVjdGlvbk1hcmtlciIsImxpbmVNYXRlcmlhbCIsImNvbm5lY3RpbmdMaW5lQ29sb3IiLCJsaW5lIiwibGVycCIsInNlbmRpbmdMaW5lQ29sb3IiLCJib2RpZXMiLCJib2R5IiwiZGVmYXVsdE1hdGVyaWFsIiwiTWVzaEJhc2ljTWF0ZXJpYWwiLCJ0ZXh0dXJlTG9hZGVyIiwiVGV4dHVyZUxvYWRlciIsInRvTG93ZXJDYXNlIiwibWF0ZXJpYWxGYWN0b3J5IiwibWF0ZXJpYWxGYWN0b3JpZXMiLCJyYWRpdXMiLCJTcGhlcmVHZW9tZXRyeSIsIm1lcmN1cnkiLCJnZXRDb2xvck1hdGVyaWFsIiwidmVudXMiLCJlYXJ0aCIsIm1hcnMiLCJqdXBpdGVyIiwic2F0dXJuIiwiRG91YmxlU2lkZSIsInVyYW51cyIsIm5lcHR1bmUiLCJhbHBoYU1hcCIsInNpZGUiLCJGcm9udFNpZGUiLCJsb2FkIiwidHJhbnNwYXJlbnQiLCJ3ZWJwYWNrRW1wdHlDb250ZXh0IiwicmVxIiwicmVzb2x2ZSIsImV4cG9ydHMiLCJpZCJdLCJtYXBwaW5ncyI6IjBGQUFBLHU4RkFHQSxNQUFNQSxFQUFPLElBQUlDLE1BQU0sSUFBSUMsVUFBS0MsR0FJaEMsU0FBU0MsRUFBVUMsR0FBTyxPQUFPTCxFQUFLSyxHQUZ0Q0wsRUFBS00sVUFBS0gsRUFBVyxNQUFNLEdBQU0sR0FJakMsSUFBSUksRUFBWVAsRUFBS1EsT0FRckIsU0FBU0MsRUFBV0osR0FDaEIsTUFBTUssRUFBTU4sRUFBVUMsR0FFdEIsT0FUSixTQUFvQkEsR0FDWkEsRUFBTSxLQUNWTCxFQUFLSyxHQUFPRSxFQUNaQSxFQUFZRixHQUtaTSxDQUFXTixHQUNKSyxFQUtYLElBQUlFLEVBQW9CLElBRm9CLG9CQUFoQkMsYUFBOEIsRUFBSUMsRUFBT0MsU0FBUyxRQUFRRixZQUFjQSxhQUUzRCxRQUFTLENBQUVHLFdBQVcsRUFBTUMsT0FBTyxJQUU1RUwsRUFBa0JNLFNBRWxCLElBQUlDLEVBQXVCLEtBQzNCLFNBQVNDLElBSUwsT0FINkIsT0FBekJELEdBQWlDQSxFQUFxQkUsU0FBVyxJQUFZQSxTQUM3RUYsRUFBdUIsSUFBSUcsV0FBVyxJQUFZRCxTQUUvQ0YsRUFHWCxTQUFTSSxFQUFtQkMsRUFBS0MsR0FDN0IsT0FBT2IsRUFBa0JNLE9BQU9FLElBQWtCTSxTQUFTRixFQUFLQSxFQUFNQyxJQUcxRSxTQUFTRSxFQUFjQyxHQUNmckIsSUFBY1AsRUFBS1EsUUFBUVIsRUFBS00sS0FBS04sRUFBS1EsT0FBUyxHQUN2RCxNQUFNSCxFQUFNRSxFQUlaLE9B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bEIsSUFBSW5JLEVBQU1vSSxlQUNmRCxFQUFTLEVBQUF2SSxTQUFTa0MsYUFBZSxFQUFBTSxXQUFXVSxXQUM1QyxHQUNBLEtBUkFtRixFQUFrQkEsRUFBZ0JuSixHQUFROEksR0FJOUMsSUFBMkJPLEdBUTNCLE1BQU1ELEVBRUYsQ0FDRkcsUUFBU0MsRUFDVEMsTUFBT0QsRUFDUEUsTUFBT0YsRUFLUEcsS0FBTUgsRUFDTkksUUFBU0osRUFDVEssT0FBUSxJQUFNLENBQ1pMLEVBQWlCLFVBQ2pCQSxFQUFpQixlQUFlLEVBQU90SSxFQUFNNEksYUFFL0NDLE9BQVFQLEVBQ1JRLFFBQVNSLEdBR1gsU0FBU0EsRUFDUHhKLEVBQ0FpSyxHQUFXLEVBQ1hDLEVBQU9oSixFQUFNaUosV0FFYixPQUFPLElBQUlqSixFQUFNNkgsa0JBQWtCLENBQ2pDM0YsSUFBSzRGLEVBQWNvQixLQUFLLGFBQWFwSyxlQUNyQ2lLLFNBQVVBLEVBQ05qQixFQUFjb0IsS0FBSyxhQUFhcEssZUFDaEMsS0FDSnFLLFlBQWFKLEVBQ2JDLFcsY0N4REosU0FBU0ksRUFBb0JDLEdBQzVCLElBQUkxVCxFQUFJLElBQUlOLE1BQU0sdUJBQXlCZ1UsRUFBTSxLQUVqRCxNQURBMVQsRUFBRTdCLEtBQU8sbUJBQ0g2QixFQUVQeVQsRUFBb0JuSCxLQUFPLFdBQWEsTUFBTyxJQUMvQ21ILEVBQW9CRSxRQUFVRixFQUM5QnRYLEVBQU95WCxRQUFVSCxFQUNqQkEsRUFBb0JJLEdBQUssSSw4QkNSekIsK2lMQUVBIiwiZmlsZSI6IjEuYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0dXAsIHRpY2ssIGdldENhbWVyYVBvc2l0aW9uIH0gZnJvbSAnLi9zbmlwcGV0cy9pcG5fc2ltX3dlYl9hcHAtZGM2MThiZGFlYTg1NTUwZi90cy9iaW5kaW5ncy50cyc7XG5pbXBvcnQgKiBhcyB3YXNtIGZyb20gJy4vaW5kZXhfYmcud2FzbSc7XG5cbmNvbnN0IGhlYXAgPSBuZXcgQXJyYXkoMzIpLmZpbGwodW5kZWZpbmVkKTtcblxuaGVhcC5wdXNoKHVuZGVmaW5lZCwgbnVsbCwgdHJ1ZSwgZmFsc2UpO1xuXG5mdW5jdGlvbiBnZXRPYmplY3QoaWR4KSB7IHJldHVybiBoZWFwW2lkeF07IH1cblxubGV0IGhlYXBfbmV4dCA9IGhlYXAubGVuZ3RoO1xuXG5mdW5jdGlvbiBkcm9wT2JqZWN0KGlkeCkge1xuICAgIGlmIChpZHggPCAzNikgcmV0dXJuO1xuICAgIGhlYXBbaWR4XSA9IGhlYXBfbmV4dDtcbiAgICBoZWFwX25leHQgPSBpZHg7XG59XG5cbmZ1bmN0aW9uIHRha2VPYmplY3QoaWR4KSB7XG4gICAgY29uc3QgcmV0ID0gZ2V0T2JqZWN0KGlkeCk7XG4gICAgZHJvcE9iamVjdChpZHgpO1xuICAgIHJldHVybiByZXQ7XG59XG5cbmNvbnN0IGxUZXh0RGVjb2RlciA9IHR5cGVvZiBUZXh0RGVjb2RlciA9PT0gJ3VuZGVmaW5lZCcgPyAoMCwgbW9kdWxlLnJlcXVpcmUpKCd1dGlsJykuVGV4dERlY29kZXIgOiBUZXh0RGVjb2RlcjtcblxubGV0IGNhY2hlZFRleHREZWNvZGVyID0gbmV3IGxUZXh0RGVjb2RlcigndXRmLTgnLCB7IGlnbm9yZUJPTTogdHJ1ZSwgZmF0YWw6IHRydWUgfSk7XG5cbmNhY2hlZFRleHREZWNvZGVyLmRlY29kZSgpO1xuXG5sZXQgY2FjaGVnZXRVaW50OE1lbW9yeTAgPSBudWxsO1xuZnVuY3Rpb24gZ2V0VWludDhNZW1vcnkwKCkge1xuICAgIGlmIChjYWNoZWdldFVpbnQ4TWVtb3J5MCA9PT0gbnVsbCB8fCBjYWNoZWdldFVpbnQ4TWVtb3J5MC5idWZmZXIgIT09IHdhc20ubWVtb3J5LmJ1ZmZlcikge1xuICAgICAgICBjYWNoZWdldFVpbnQ4TWVtb3J5MCA9IG5ldyBVaW50OEFycmF5KHdhc20ubWVtb3J5LmJ1ZmZlcik7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWdldFVpbnQ4TWVtb3J5MDtcbn1cblxuZnVuY3Rpb24gZ2V0U3RyaW5nRnJvbVdhc20wKHB0ciwgbGVuKSB7XG4gICAgcmV0dXJuIGNhY2hlZFRleHREZWNvZGVyLmRlY29kZShnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIsIHB0ciArIGxlbikpO1xufVxuXG5mdW5jdGlvbiBhZGRIZWFwT2JqZWN0KG9iaikge1xuICAgIGlmIChoZWFwX25leHQgPT09IGhlYXAubGVuZ3RoKSBoZWFwLnB1c2goaGVhcC5sZW5ndGggKyAxKTtcbiAgICBjb25zdCBpZHggPSBoZWFwX25leHQ7XG4gICAgaGVhcF9uZXh0ID0gaGVhcFtpZHhdO1xuXG4gICAgaGVhcFtpZHhdID0gb2JqO1xuICAgIHJldHVybiBpZHg7XG59XG5cbmxldCBXQVNNX1ZFQ1RPUl9MRU4gPSAwO1xuXG5jb25zdCBsVGV4dEVuY29kZXIgPSB0eXBlb2YgVGV4dEVuY29kZXIgPT09ICd1bmRlZmluZWQnID8gKDAsIG1vZHVsZS5yZXF1aXJlKSgndXRpbCcpLlRleHRFbmNvZGVyIDogVGV4dEVuY29kZXI7XG5cbmxldCBjYWNoZWRUZXh0RW5jb2RlciA9IG5ldyBsVGV4dEVuY29kZXIoJ3V0Zi04Jyk7XG5cbmNvbnN0IGVuY29kZVN0cmluZyA9ICh0eXBlb2YgY2FjaGVkVGV4dEVuY29kZXIuZW5jb2RlSW50byA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gZnVuY3Rpb24gKGFyZywgdmlldykge1xuICAgIHJldHVybiBjYWNoZWRUZXh0RW5jb2Rlci5lbmNvZGVJbnRvKGFyZywgdmlldyk7XG59XG4gICAgOiBmdW5jdGlvbiAoYXJnLCB2aWV3KSB7XG4gICAgY29uc3QgYnVmID0gY2FjaGVkVGV4dEVuY29kZXIuZW5jb2RlKGFyZyk7XG4gICAgdmlldy5zZXQoYnVmKTtcbiAgICByZXR1cm4ge1xuICAgICAgICByZWFkOiBhcmcubGVuZ3RoLFxuICAgICAgICB3cml0dGVuOiBidWYubGVuZ3RoXG4gICAgfTtcbn0pO1xuXG5mdW5jdGlvbiBwYXNzU3RyaW5nVG9XYXNtMChhcmcsIG1hbGxvYywgcmVhbGxvYykge1xuXG4gICAgaWYgKHJlYWxsb2MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBidWYgPSBjYWNoZWRUZXh0RW5jb2Rlci5lbmNvZGUoYXJnKTtcbiAgICAgICAgY29uc3QgcHRyID0gbWFsbG9jKGJ1Zi5sZW5ndGgpO1xuICAgICAgICBnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIsIHB0ciArIGJ1Zi5sZW5ndGgpLnNldChidWYpO1xuICAgICAgICBXQVNNX1ZFQ1RPUl9MRU4gPSBidWYubGVuZ3RoO1xuICAgICAgICByZXR1cm4gcHRyO1xuICAgIH1cblxuICAgIGxldCBsZW4gPSBhcmcubGVuZ3RoO1xuICAgIGxldCBwdHIgPSBtYWxsb2MobGVuKTtcblxuICAgIGNvbnN0IG1lbSA9IGdldFVpbnQ4TWVtb3J5MCgpO1xuXG4gICAgbGV0IG9mZnNldCA9IDA7XG5cbiAgICBmb3IgKDsgb2Zmc2V0IDwgbGVuOyBvZmZzZXQrKykge1xuICAgICAgICBjb25zdCBjb2RlID0gYXJnLmNoYXJDb2RlQXQob2Zmc2V0KTtcbiAgICAgICAgaWYgKGNvZGUgPiAweDdGKSBicmVhaztcbiAgICAgICAgbWVtW3B0ciArIG9mZnNldF0gPSBjb2RlO1xuICAgIH1cblxuICAgIGlmIChvZmZzZXQgIT09IGxlbikge1xuICAgICAgICBpZiAob2Zmc2V0ICE9PSAwKSB7XG4gICAgICAgICAgICBhcmcgPSBhcmcuc2xpY2Uob2Zmc2V0KTtcbiAgICAgICAgfVxuICAgICAgICBwdHIgPSByZWFsbG9jKHB0ciwgbGVuLCBsZW4gPSBvZmZzZXQgKyBhcmcubGVuZ3RoICogMyk7XG4gICAgICAgIGNvbnN0IHZpZXcgPSBnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIgKyBvZmZzZXQsIHB0ciArIGxlbik7XG4gICAgICAgIGNvbnN0IHJldCA9IGVuY29kZVN0cmluZyhhcmcsIHZpZXcpO1xuXG4gICAgICAgIG9mZnNldCArPSByZXQud3JpdHRlbjtcbiAgICB9XG5cbiAgICBXQVNNX1ZFQ1RPUl9MRU4gPSBvZmZzZXQ7XG4gICAgcmV0dXJuIHB0cjtcbn1cblxubGV0IGNhY2hlZ2V0SW50MzJNZW1vcnkwID0gbnVsbDtcbmZ1bmN0aW9uIGdldEludDMyTWVtb3J5MCgpIHtcbiAgICBpZiAoY2FjaGVnZXRJbnQzMk1lbW9yeTAgPT09IG51bGwgfHwgY2FjaGVnZXRJbnQzMk1lbW9yeTAuYnVmZmVyICE9PSB3YXNtLm1lbW9yeS5idWZmZXIpIHtcbiAgICAgICAgY2FjaGVnZXRJbnQzMk1lbW9yeTAgPSBuZXcgSW50MzJBcnJheSh3YXNtLm1lbW9yeS5idWZmZXIpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVnZXRJbnQzMk1lbW9yeTA7XG59XG5cbmZ1bmN0aW9uIGRlYnVnU3RyaW5nKHZhbCkge1xuICAgIC8vIHByaW1pdGl2ZSB0eXBlc1xuICAgIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsO1xuICAgIGlmICh0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nIHx8IHZhbCA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAgYCR7dmFsfWA7XG4gICAgfVxuICAgIGlmICh0eXBlID09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBgXCIke3ZhbH1cImA7XG4gICAgfVxuICAgIGlmICh0eXBlID09ICdzeW1ib2wnKSB7XG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gdmFsLmRlc2NyaXB0aW9uO1xuICAgICAgICBpZiAoZGVzY3JpcHRpb24gPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuICdTeW1ib2wnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGBTeW1ib2woJHtkZXNjcmlwdGlvbn0pYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSB2YWwubmFtZTtcbiAgICAgICAgaWYgKHR5cGVvZiBuYW1lID09ICdzdHJpbmcnICYmIG5hbWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGBGdW5jdGlvbigke25hbWV9KWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gJ0Z1bmN0aW9uJztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBvYmplY3RzXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgICBjb25zdCBsZW5ndGggPSB2YWwubGVuZ3RoO1xuICAgICAgICBsZXQgZGVidWcgPSAnWyc7XG4gICAgICAgIGlmIChsZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBkZWJ1ZyArPSBkZWJ1Z1N0cmluZyh2YWxbMF0pO1xuICAgICAgICB9XG4gICAgICAgIGZvcihsZXQgaSA9IDE7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZGVidWcgKz0gJywgJyArIGRlYnVnU3RyaW5nKHZhbFtpXSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVidWcgKz0gJ10nO1xuICAgICAgICByZXR1cm4gZGVidWc7XG4gICAgfVxuICAgIC8vIFRlc3QgZm9yIGJ1aWx0LWluXG4gICAgY29uc3QgYnVpbHRJbk1hdGNoZXMgPSAvXFxbb2JqZWN0IChbXlxcXV0rKVxcXS8uZXhlYyh0b1N0cmluZy5jYWxsKHZhbCkpO1xuICAgIGxldCBjbGFzc05hbWU7XG4gICAgaWYgKGJ1aWx0SW5NYXRjaGVzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgY2xhc3NOYW1lID0gYnVpbHRJbk1hdGNoZXNbMV07XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRmFpbGVkIHRvIG1hdGNoIHRoZSBzdGFuZGFyZCAnW29iamVjdCBDbGFzc05hbWVdJ1xuICAgICAgICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpO1xuICAgIH1cbiAgICBpZiAoY2xhc3NOYW1lID09ICdPYmplY3QnKSB7XG4gICAgICAgIC8vIHdlJ3JlIGEgdXNlciBkZWZpbmVkIGNsYXNzIG9yIE9iamVjdFxuICAgICAgICAvLyBKU09OLnN0cmluZ2lmeSBhdm9pZHMgcHJvYmxlbXMgd2l0aCBjeWNsZXMsIGFuZCBpcyBnZW5lcmFsbHkgbXVjaFxuICAgICAgICAvLyBlYXNpZXIgdGhhbiBsb29waW5nIHRocm91Z2ggb3duUHJvcGVydGllcyBvZiBgdmFsYC5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiAnT2JqZWN0KCcgKyBKU09OLnN0cmluZ2lmeSh2YWwpICsgJyknO1xuICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgICByZXR1cm4gJ09iamVjdCc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gZXJyb3JzXG4gICAgaWYgKHZhbCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHJldHVybiBgJHt2YWwubmFtZX06ICR7dmFsLm1lc3NhZ2V9XFxuJHt2YWwuc3RhY2t9YDtcbiAgICB9XG4gICAgLy8gVE9ETyB3ZSBjb3VsZCB0ZXN0IGZvciBtb3JlIHRoaW5ncyBoZXJlLCBsaWtlIGBTZXRgcyBhbmQgYE1hcGBzLlxuICAgIHJldHVybiBjbGFzc05hbWU7XG59XG5cbmZ1bmN0aW9uIG1ha2VNdXRDbG9zdXJlKGFyZzAsIGFyZzEsIGR0b3IsIGYpIHtcbiAgICBjb25zdCBzdGF0ZSA9IHsgYTogYXJnMCwgYjogYXJnMSwgY250OiAxLCBkdG9yIH07XG4gICAgY29uc3QgcmVhbCA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIC8vIEZpcnN0IHVwIHdpdGggYSBjbG9zdXJlIHdlIGluY3JlbWVudCB0aGUgaW50ZXJuYWwgcmVmZXJlbmNlXG4gICAgICAgIC8vIGNvdW50LiBUaGlzIGVuc3VyZXMgdGhhdCB0aGUgUnVzdCBjbG9zdXJlIGVudmlyb25tZW50IHdvbid0XG4gICAgICAgIC8vIGJlIGRlYWxsb2NhdGVkIHdoaWxlIHdlJ3JlIGludm9raW5nIGl0LlxuICAgICAgICBzdGF0ZS5jbnQrKztcbiAgICAgICAgY29uc3QgYSA9IHN0YXRlLmE7XG4gICAgICAgIHN0YXRlLmEgPSAwO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGYoYSwgc3RhdGUuYiwgLi4uYXJncyk7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBpZiAoLS1zdGF0ZS5jbnQgPT09IDApIHtcbiAgICAgICAgICAgICAgICB3YXNtLl9fd2JpbmRnZW5fZXhwb3J0XzIuZ2V0KHN0YXRlLmR0b3IpKGEsIHN0YXRlLmIpO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0YXRlLmEgPSBhO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZWFsLm9yaWdpbmFsID0gc3RhdGU7XG5cbiAgICByZXR1cm4gcmVhbDtcbn1cbmZ1bmN0aW9uIF9fd2JnX2FkYXB0ZXJfMjYoYXJnMCwgYXJnMSkge1xuICAgIHdhc20uX2R5bl9jb3JlX19vcHNfX2Z1bmN0aW9uX19Gbk11dF9fX19fT3V0cHV0X19fUl9hc193YXNtX2JpbmRnZW5fX2Nsb3N1cmVfX1dhc21DbG9zdXJlX19fZGVzY3JpYmVfX2ludm9rZV9faDRjNTE3NWI5YWUxOGNiODAoYXJnMCwgYXJnMSk7XG59XG5cbmxldCBzdGFja19wb2ludGVyID0gMzI7XG5cbmZ1bmN0aW9uIGFkZEJvcnJvd2VkT2JqZWN0KG9iaikge1xuICAgIGlmIChzdGFja19wb2ludGVyID09IDEpIHRocm93IG5ldyBFcnJvcignb3V0IG9mIGpzIHN0YWNrJyk7XG4gICAgaGVhcFstLXN0YWNrX3BvaW50ZXJdID0gb2JqO1xuICAgIHJldHVybiBzdGFja19wb2ludGVyO1xufVxuZnVuY3Rpb24gX193YmdfYWRhcHRlcl8yOShhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgd2FzbS5fZHluX2NvcmVfX29wc19fZnVuY3Rpb25fX0ZuTXV0X19fQV9fX19PdXRwdXRfX19SX2FzX3dhc21fYmluZGdlbl9fY2xvc3VyZV9fV2FzbUNsb3N1cmVfX19kZXNjcmliZV9faW52b2tlX19oYjg1YmI3YWMwOTU3ODk0NyhhcmcwLCBhcmcxLCBhZGRCb3Jyb3dlZE9iamVjdChhcmcyKSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaGVhcFtzdGFja19wb2ludGVyKytdID0gdW5kZWZpbmVkO1xuICAgIH1cbn1cblxuLyoqXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9hcHAoKSB7XG4gICAgd2FzbS5ydW5fYXBwKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVycm9yKGYsIGFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHdhc20uX193YmluZGdlbl9leG5fc3RvcmUoYWRkSGVhcE9iamVjdChlKSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRBcnJheVU4RnJvbVdhc20wKHB0ciwgbGVuKSB7XG4gICAgcmV0dXJuIGdldFVpbnQ4TWVtb3J5MCgpLnN1YmFycmF5KHB0ciAvIDEsIHB0ciAvIDEgKyBsZW4pO1xufVxuXG5mdW5jdGlvbiBpc0xpa2VOb25lKHgpIHtcbiAgICByZXR1cm4geCA9PT0gdW5kZWZpbmVkIHx8IHggPT09IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diaW5kZ2VuX29iamVjdF9kcm9wX3JlZihhcmcwKSB7XG4gICAgdGFrZU9iamVjdChhcmcwKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ190aWNrX2JmZmNlNWM3ZGY2NjgxZDcoYXJnMCkge1xuICAgIHRpY2sodGFrZU9iamVjdChhcmcwKSk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9jYl9kcm9wKGFyZzApIHtcbiAgICBjb25zdCBvYmogPSB0YWtlT2JqZWN0KGFyZzApLm9yaWdpbmFsO1xuICAgIGlmIChvYmouY250LS0gPT0gMSkge1xuICAgICAgICBvYmouYSA9IDA7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICB2YXIgcmV0ID0gZmFsc2U7XG4gICAgcmV0dXJuIHJldDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diaW5kZ2VuX2pzb25fcGFyc2UoYXJnMCwgYXJnMSkge1xuICAgIHZhciByZXQgPSBKU09OLnBhcnNlKGdldFN0cmluZ0Zyb21XYXNtMChhcmcwLCBhcmcxKSk7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diaW5kZ2VuX2pzb25fc2VyaWFsaXplKGFyZzAsIGFyZzEpIHtcbiAgICBjb25zdCBvYmogPSBnZXRPYmplY3QoYXJnMSk7XG4gICAgdmFyIHJldCA9IEpTT04uc3RyaW5naWZ5KG9iaiA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IG9iaik7XG4gICAgdmFyIHB0cjAgPSBwYXNzU3RyaW5nVG9XYXNtMChyZXQsIHdhc20uX193YmluZGdlbl9tYWxsb2MsIHdhc20uX193YmluZGdlbl9yZWFsbG9jKTtcbiAgICB2YXIgbGVuMCA9IFdBU01fVkVDVE9SX0xFTjtcbiAgICBnZXRJbnQzMk1lbW9yeTAoKVthcmcwIC8gNCArIDFdID0gbGVuMDtcbiAgICBnZXRJbnQzMk1lbW9yeTAoKVthcmcwIC8gNCArIDBdID0gcHRyMDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19zZXR1cF9hNzlhZDI2YjkyMzU3NzkyKGFyZzApIHtcbiAgICBzZXR1cCh0YWtlT2JqZWN0KGFyZzApKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19nZXRDYW1lcmFQb3NpdGlvbl9hNDY1NjgxMjZjYTU2OTg4KCkge1xuICAgIHZhciByZXQgPSBnZXRDYW1lcmFQb3NpdGlvbigpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9vYmplY3RfY2xvbmVfcmVmKGFyZzApIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfbG9nXzk4NjRiYmNlNDc4NDRiYjgoYXJnMCwgYXJnMSkge1xuICAgIGNvbnNvbGUubG9nKGdldFN0cmluZ0Zyb21XYXNtMChhcmcwLCBhcmcxKSk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfcmFuZG9tRmlsbFN5bmNfNjRjYzdkMDQ4ZjIyOGNhOCgpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLnJhbmRvbUZpbGxTeW5jKGdldEFycmF5VThGcm9tV2FzbTAoYXJnMSwgYXJnMikpO1xufSwgYXJndW1lbnRzKSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfZ2V0UmFuZG9tVmFsdWVzXzk4MTE3ZTlhN2U5OTM5MjAoKSB7IHJldHVybiBoYW5kbGVFcnJvcihmdW5jdGlvbiAoYXJnMCwgYXJnMSkge1xuICAgIGdldE9iamVjdChhcmcwKS5nZXRSYW5kb21WYWx1ZXMoZ2V0T2JqZWN0KGFyZzEpKTtcbn0sIGFyZ3VtZW50cykgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3Byb2Nlc3NfMmYyNGQ2NTQ0ZWE3YjIwMChhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5wcm9jZXNzO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9pc19vYmplY3QoYXJnMCkge1xuICAgIGNvbnN0IHZhbCA9IGdldE9iamVjdChhcmcwKTtcbiAgICB2YXIgcmV0ID0gdHlwZW9mKHZhbCkgPT09ICdvYmplY3QnICYmIHZhbCAhPT0gbnVsbDtcbiAgICByZXR1cm4gcmV0O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3ZlcnNpb25zXzYxNjQ2NTFlNzU0MDVkNGEoYXJnMCkge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkudmVyc2lvbnM7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19ub2RlXzRiNTE3ZDg2MWNiY2IzYmMoYXJnMCkge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkubm9kZTtcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2NyeXB0b185OGZjMjcxMDIxYzdkMmFkKGFyZzApIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApLmNyeXB0bztcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX21zQ3J5cHRvX2EyY2RiMDQzZDJiZmU1N2YoYXJnMCkge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkubXNDcnlwdG87XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19tb2R1bGVyZXF1aXJlXzM0NDBhNGJjZjQ0NDM3ZGIoKSB7IHJldHVybiBoYW5kbGVFcnJvcihmdW5jdGlvbiAoYXJnMCwgYXJnMSkge1xuICAgIHZhciByZXQgPSBtb2R1bGUucmVxdWlyZShnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMCwgYXJnMSkpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diaW5kZ2VuX3N0cmluZ19uZXcoYXJnMCwgYXJnMSkge1xuICAgIHZhciByZXQgPSBnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMCwgYXJnMSk7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diaW5kZ2VuX2lzX3VuZGVmaW5lZChhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKSA9PT0gdW5kZWZpbmVkO1xuICAgIHJldHVybiByZXQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfbmV3XzU5Y2I3NGU0MjM3NThlZGUoKSB7XG4gICAgdmFyIHJldCA9IG5ldyBFcnJvcigpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfc3RhY2tfNTU4YmE1OTE3YjQ2NmVkZChhcmcwLCBhcmcxKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcxKS5zdGFjaztcbiAgICB2YXIgcHRyMCA9IHBhc3NTdHJpbmdUb1dhc20wKHJldCwgd2FzbS5fX3diaW5kZ2VuX21hbGxvYywgd2FzbS5fX3diaW5kZ2VuX3JlYWxsb2MpO1xuICAgIHZhciBsZW4wID0gV0FTTV9WRUNUT1JfTEVOO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMV0gPSBsZW4wO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMF0gPSBwdHIwO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2Vycm9yXzRiYjZjMmE5NzQwNzEyOWEoYXJnMCwgYXJnMSkge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZ2V0U3RyaW5nRnJvbVdhc20wKGFyZzAsIGFyZzEpKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgICB3YXNtLl9fd2JpbmRnZW5fZnJlZShhcmcwLCBhcmcxKTtcbiAgICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfV2luZG93X2Y4MjZhMWRlYzE2M2JhY2IoYXJnMCkge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkuV2luZG93O1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfV29ya2VyR2xvYmFsU2NvcGVfOTY3ZDE4NjE1NTE4M2QzOChhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5Xb3JrZXJHbG9iYWxTY29wZTtcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2luc3RhbmNlb2ZfV2luZG93X2I5OTQyOWVjNDA4ZGNiOGQoYXJnMCkge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkgaW5zdGFuY2VvZiBXaW5kb3c7XG4gICAgcmV0dXJuIHJldDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19kb2N1bWVudF82ZDU4OTBiODZiYmY1Yjk2KGFyZzApIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApLmRvY3VtZW50O1xuICAgIHJldHVybiBpc0xpa2VOb25lKHJldCkgPyAwIDogYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2NsZWFySW50ZXJ2YWxfMWM1MTQ1MmY0OTNkYWYxZShhcmcwLCBhcmcxKSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLmNsZWFySW50ZXJ2YWwoYXJnMSk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfc2V0SW50ZXJ2YWxfNmNhYmI2MDA0MmFjZDkyOCgpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5zZXRJbnRlcnZhbChnZXRPYmplY3QoYXJnMSksIGFyZzIpO1xuICAgIHJldHVybiByZXQ7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19jcmVhdGVFbGVtZW50XzE5NTljZTg4MjI4NGUwMTEoKSB7IHJldHVybiBoYW5kbGVFcnJvcihmdW5jdGlvbiAoYXJnMCwgYXJnMSwgYXJnMikge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkuY3JlYXRlRWxlbWVudChnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMikpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19jcmVhdGVFbGVtZW50TlNfM2JlNTdiOGQwYzdjMTNlNSgpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxLCBhcmcyLCBhcmczLCBhcmc0KSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5jcmVhdGVFbGVtZW50TlMoYXJnMSA9PT0gMCA/IHVuZGVmaW5lZCA6IGdldFN0cmluZ0Zyb21XYXNtMChhcmcxLCBhcmcyKSwgZ2V0U3RyaW5nRnJvbVdhc20wKGFyZzMsIGFyZzQpKTtcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufSwgYXJndW1lbnRzKSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfY3JlYXRlVGV4dE5vZGVfZjdiZGExNDMwNzYwMjIxNyhhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5jcmVhdGVUZXh0Tm9kZShnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMikpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfZ2V0RWxlbWVudEJ5SWRfZjA1OWI3NDAxYTIzZWU3YyhhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5nZXRFbGVtZW50QnlJZChnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMikpO1xuICAgIHJldHVybiBpc0xpa2VOb25lKHJldCkgPyAwIDogYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3F1ZXJ5U2VsZWN0b3JfNzUzZTEwMzc3NDBmNzM3OSgpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5xdWVyeVNlbGVjdG9yKGdldFN0cmluZ0Zyb21XYXNtMChhcmcxLCBhcmcyKSk7XG4gICAgcmV0dXJuIGlzTGlrZU5vbmUocmV0KSA/IDAgOiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19pbnN0YW5jZW9mX0h0bWxUZXh0QXJlYUVsZW1lbnRfZWExNzhhZTExMDhiZjhjZShhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKSBpbnN0YW5jZW9mIEhUTUxUZXh0QXJlYUVsZW1lbnQ7XG4gICAgcmV0dXJuIHJldDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ192YWx1ZV9mODQwMTQwNTYyZTAzMTRhKGFyZzAsIGFyZzEpIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzEpLnZhbHVlO1xuICAgIHZhciBwdHIwID0gcGFzc1N0cmluZ1RvV2FzbTAocmV0LCB3YXNtLl9fd2JpbmRnZW5fbWFsbG9jLCB3YXNtLl9fd2JpbmRnZW5fcmVhbGxvYyk7XG4gICAgdmFyIGxlbjAgPSBXQVNNX1ZFQ1RPUl9MRU47XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAxXSA9IGxlbjA7XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAwXSA9IHB0cjA7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfc2V0dmFsdWVfZDg0Njg3MGRhZDFjOWUwYShhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLnZhbHVlID0gZ2V0U3RyaW5nRnJvbVdhc20wKGFyZzEsIGFyZzIpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2luc3RhbmNlb2ZfSHRtbEJ1dHRvbkVsZW1lbnRfYzUzYThlZDgwMTM0ZTM3NShhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKSBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50O1xuICAgIHJldHVybiByZXQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfc2V0dHlwZV83OTFiZWVmMDAwMDc4OWQwKGFyZzAsIGFyZzEsIGFyZzIpIHtcbiAgICBnZXRPYmplY3QoYXJnMCkudHlwZSA9IGdldFN0cmluZ0Zyb21XYXNtMChhcmcxLCBhcmcyKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19pbnN0YW5jZW9mX0h0bWxJbnB1dEVsZW1lbnRfYThhY2M2Mjk0YTQzMjVkMShhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKSBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnQ7XG4gICAgcmV0dXJuIHJldDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19zZXRjaGVja2VkX2M3NTZlZjgwMWY3ZTlmZTIoYXJnMCwgYXJnMSkge1xuICAgIGdldE9iamVjdChhcmcwKS5jaGVja2VkID0gYXJnMSAhPT0gMDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19maWxlc19iZDBjNDQ4Y2ZlZGU5MjJhKGFyZzApIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApLmZpbGVzO1xuICAgIHJldHVybiBpc0xpa2VOb25lKHJldCkgPyAwIDogYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3NldHR5cGVfOGM3Zjk5ZDQ2ODhjNmM0YihhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLnR5cGUgPSBnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMik7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfdmFsdWVfNDVhMGE2NmFjZjM0YmY1NihhcmcwLCBhcmcxKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcxKS52YWx1ZTtcbiAgICB2YXIgcHRyMCA9IHBhc3NTdHJpbmdUb1dhc20wKHJldCwgd2FzbS5fX3diaW5kZ2VuX21hbGxvYywgd2FzbS5fX3diaW5kZ2VuX3JlYWxsb2MpO1xuICAgIHZhciBsZW4wID0gV0FTTV9WRUNUT1JfTEVOO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMV0gPSBsZW4wO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMF0gPSBwdHIwO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3NldHZhbHVlXzY2NzFjYzVlZDRlNTBlZDEoYXJnMCwgYXJnMSwgYXJnMikge1xuICAgIGdldE9iamVjdChhcmcwKS52YWx1ZSA9IGdldFN0cmluZ0Zyb21XYXNtMChhcmcxLCBhcmcyKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19hZGRFdmVudExpc3RlbmVyXzQ5ZTkwZmY1MzliMWI2NjcoKSB7IHJldHVybiBoYW5kbGVFcnJvcihmdW5jdGlvbiAoYXJnMCwgYXJnMSwgYXJnMiwgYXJnMywgYXJnNCkge1xuICAgIGdldE9iamVjdChhcmcwKS5hZGRFdmVudExpc3RlbmVyKGdldFN0cmluZ0Zyb21XYXNtMChhcmcxLCBhcmcyKSwgZ2V0T2JqZWN0KGFyZzMpLCBnZXRPYmplY3QoYXJnNCkpO1xufSwgYXJndW1lbnRzKSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfcmVtb3ZlRXZlbnRMaXN0ZW5lcl83MzZjOGM3MGY5ZmZjNGRkKCkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZnVuY3Rpb24gKGFyZzAsIGFyZzEsIGFyZzIsIGFyZzMsIGFyZzQpIHtcbiAgICBnZXRPYmplY3QoYXJnMCkucmVtb3ZlRXZlbnRMaXN0ZW5lcihnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMiksIGdldE9iamVjdChhcmczKSwgYXJnNCAhPT0gMCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19uYW1lc3BhY2VVUklfMDg5YWY4YTMxNjM0ZDE2YyhhcmcwLCBhcmcxKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcxKS5uYW1lc3BhY2VVUkk7XG4gICAgdmFyIHB0cjAgPSBpc0xpa2VOb25lKHJldCkgPyAwIDogcGFzc1N0cmluZ1RvV2FzbTAocmV0LCB3YXNtLl9fd2JpbmRnZW5fbWFsbG9jLCB3YXNtLl9fd2JpbmRnZW5fcmVhbGxvYyk7XG4gICAgdmFyIGxlbjAgPSBXQVNNX1ZFQ1RPUl9MRU47XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAxXSA9IGxlbjA7XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAwXSA9IHB0cjA7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfY2xpZW50V2lkdGhfZDhmOWE3Zjg0NGJmYmJhNShhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5jbGllbnRXaWR0aDtcbiAgICByZXR1cm4gcmV0O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2dldEF0dHJpYnV0ZV9hOTUwNTgwYWE4ZjNkZmM2KGFyZzAsIGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzEpLmdldEF0dHJpYnV0ZShnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMiwgYXJnMykpO1xuICAgIHZhciBwdHIwID0gaXNMaWtlTm9uZShyZXQpID8gMCA6IHBhc3NTdHJpbmdUb1dhc20wKHJldCwgd2FzbS5fX3diaW5kZ2VuX21hbGxvYywgd2FzbS5fX3diaW5kZ2VuX3JlYWxsb2MpO1xuICAgIHZhciBsZW4wID0gV0FTTV9WRUNUT1JfTEVOO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMV0gPSBsZW4wO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMF0gPSBwdHIwO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3JlbW92ZUF0dHJpYnV0ZV85NmZjN2Q3ZTM2MjE3ZmU4KCkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZnVuY3Rpb24gKGFyZzAsIGFyZzEsIGFyZzIpIHtcbiAgICBnZXRPYmplY3QoYXJnMCkucmVtb3ZlQXR0cmlidXRlKGdldFN0cmluZ0Zyb21XYXNtMChhcmcxLCBhcmcyKSk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19zZXRBdHRyaWJ1dGVfYzQ0ODg4ZTVkNmRkNTEzMygpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxLCBhcmcyLCBhcmczLCBhcmc0KSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLnNldEF0dHJpYnV0ZShnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMiksIGdldFN0cmluZ0Zyb21XYXNtMChhcmczLCBhcmc0KSk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19jbGVhckludGVydmFsXzc4NWI2ZTExODQwNjQ3NjMoYXJnMCwgYXJnMSkge1xuICAgIGdldE9iamVjdChhcmcwKS5jbGVhckludGVydmFsKGFyZzEpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3NldEludGVydmFsXzMwYWJjOTkzMmZhN2M1YmEoKSB7IHJldHVybiBoYW5kbGVFcnJvcihmdW5jdGlvbiAoYXJnMCwgYXJnMSwgYXJnMikge1xuICAgIHZhciByZXQgPSBnZXRPYmplY3QoYXJnMCkuc2V0SW50ZXJ2YWwoZ2V0T2JqZWN0KGFyZzEpLCBhcmcyKTtcbiAgICByZXR1cm4gcmV0O1xufSwgYXJndW1lbnRzKSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfbm9kZU5hbWVfZWJlMDExNzNmNmQ4MGZlZihhcmcwLCBhcmcxKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcxKS5ub2RlTmFtZTtcbiAgICB2YXIgcHRyMCA9IHBhc3NTdHJpbmdUb1dhc20wKHJldCwgd2FzbS5fX3diaW5kZ2VuX21hbGxvYywgd2FzbS5fX3diaW5kZ2VuX3JlYWxsb2MpO1xuICAgIHZhciBsZW4wID0gV0FTTV9WRUNUT1JfTEVOO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMV0gPSBsZW4wO1xuICAgIGdldEludDMyTWVtb3J5MCgpW2FyZzAgLyA0ICsgMF0gPSBwdHIwO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2xhc3RDaGlsZF80NGJlOTA2Y2NmYmFhZjBhKGFyZzApIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApLmxhc3RDaGlsZDtcbiAgICByZXR1cm4gaXNMaWtlTm9uZShyZXQpID8gMCA6IGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19zZXRub2RlVmFsdWVfZTAxMGE4NGFlYzhhY2Y0ZShhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLm5vZGVWYWx1ZSA9IGFyZzEgPT09IDAgPyB1bmRlZmluZWQgOiBnZXRTdHJpbmdGcm9tV2FzbTAoYXJnMSwgYXJnMik7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfYXBwZW5kQ2hpbGRfMjc5NzQyNjdhNDJhMGRlZigpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5hcHBlbmRDaGlsZChnZXRPYmplY3QoYXJnMSkpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19pbnNlcnRCZWZvcmVfMzc5NTI5YTRkYTZhMTk0NygpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5pbnNlcnRCZWZvcmUoZ2V0T2JqZWN0KGFyZzEpLCBnZXRPYmplY3QoYXJnMikpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19yZW1vdmVDaGlsZF83M2FlMTQ5NWNiMTY3ZGNkKCkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZnVuY3Rpb24gKGFyZzAsIGFyZzEpIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApLnJlbW92ZUNoaWxkKGdldE9iamVjdChhcmcxKSk7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn0sIGFyZ3VtZW50cykgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2luc3RhbmNlb2ZfSHRtbFNlbGVjdEVsZW1lbnRfYWU1YTA0N2U1NTVkYWRmYShhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKSBpbnN0YW5jZW9mIEhUTUxTZWxlY3RFbGVtZW50O1xuICAgIHJldHVybiByZXQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfc2VsZWN0ZWRJbmRleF8wMWYxZTI5MTc3YmMxOWZiKGFyZzApIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzApLnNlbGVjdGVkSW5kZXg7XG4gICAgcmV0dXJuIHJldDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ192YWx1ZV81YWIwYTNhYzExZTQ5NTk2KGFyZzAsIGFyZzEpIHtcbiAgICB2YXIgcmV0ID0gZ2V0T2JqZWN0KGFyZzEpLnZhbHVlO1xuICAgIHZhciBwdHIwID0gcGFzc1N0cmluZ1RvV2FzbTAocmV0LCB3YXNtLl9fd2JpbmRnZW5fbWFsbG9jLCB3YXNtLl9fd2JpbmRnZW5fcmVhbGxvYyk7XG4gICAgdmFyIGxlbjAgPSBXQVNNX1ZFQ1RPUl9MRU47XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAxXSA9IGxlbjA7XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAwXSA9IHB0cjA7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfbmV3bm9hcmdzXzY4NDI0OTY1ZDg1ZmNiMDgoYXJnMCwgYXJnMSkge1xuICAgIHZhciByZXQgPSBuZXcgRnVuY3Rpb24oZ2V0U3RyaW5nRnJvbVdhc20wKGFyZzAsIGFyZzEpKTtcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2NhbGxfOTY5OGU5YjljNDY2OGFlMCgpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uIChhcmcwLCBhcmcxKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5jYWxsKGdldE9iamVjdChhcmcxKSk7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn0sIGFyZ3VtZW50cykgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX25ld19mZmI4ZmJlMGFkNWQ0ZDJmKCkge1xuICAgIHZhciByZXQgPSBuZXcgT2JqZWN0KCk7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19pc183NDRjYzliNjUxNWZmOTVhKGFyZzAsIGFyZzEpIHtcbiAgICB2YXIgcmV0ID0gT2JqZWN0LmlzKGdldE9iamVjdChhcmcwKSwgZ2V0T2JqZWN0KGFyZzEpKTtcbiAgICByZXR1cm4gcmV0O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3NlbGZfM2RmN2MzM2UyMjJjZDUzYigpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmV0ID0gc2VsZi5zZWxmO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ193aW5kb3dfMGY5MDE4MmU2YzQwNWZmMigpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmV0ID0gd2luZG93LndpbmRvdztcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufSwgYXJndW1lbnRzKSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmdfZ2xvYmFsVGhpc183ODdjZmQ0ZjI1YTM1MTQxKCkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXQgPSBnbG9iYWxUaGlzLmdsb2JhbFRoaXM7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn0sIGFyZ3VtZW50cykgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX2dsb2JhbF9hZjJlYjdiMTM2OTM3MmVkKCkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXQgPSBnbG9iYWwuZ2xvYmFsO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59LCBhcmd1bWVudHMpIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19idWZmZXJfZWIyMTU1ZjE3ODU2YzIwYihhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5idWZmZXI7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19sZW5ndGhfMGIxOTRhYmRlOTM4ZDBjNihhcmcwKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5sZW5ndGg7XG4gICAgcmV0dXJuIHJldDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19uZXdfZmY4YjI2ZjdiMmQ3ZTJmYihhcmcwKSB7XG4gICAgdmFyIHJldCA9IG5ldyBVaW50OEFycmF5KGdldE9iamVjdChhcmcwKSk7XG4gICAgcmV0dXJuIGFkZEhlYXBPYmplY3QocmV0KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19zZXRfNjdjZGQxMTViOWNiMTQxZihhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgZ2V0T2JqZWN0KGFyZzApLnNldChnZXRPYmplY3QoYXJnMSksIGFyZzIgPj4+IDApO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX25ld3dpdGhsZW5ndGhfYTQ5YjMyYjIwMzBiOTNjMyhhcmcwKSB7XG4gICAgdmFyIHJldCA9IG5ldyBVaW50OEFycmF5KGFyZzAgPj4+IDApO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193Ymdfc3ViYXJyYXlfMWJiMzE1ZDMwZTBjOTY4YyhhcmcwLCBhcmcxLCBhcmcyKSB7XG4gICAgdmFyIHJldCA9IGdldE9iamVjdChhcmcwKS5zdWJhcnJheShhcmcxID4+PiAwLCBhcmcyID4+PiAwKTtcbiAgICByZXR1cm4gYWRkSGVhcE9iamVjdChyZXQpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JnX3NldF9jN2ZjODczNWQ3MGNlYjExKCkgeyByZXR1cm4gaGFuZGxlRXJyb3IoZnVuY3Rpb24gKGFyZzAsIGFyZzEsIGFyZzIpIHtcbiAgICB2YXIgcmV0ID0gUmVmbGVjdC5zZXQoZ2V0T2JqZWN0KGFyZzApLCBnZXRPYmplY3QoYXJnMSksIGdldE9iamVjdChhcmcyKSk7XG4gICAgcmV0dXJuIHJldDtcbn0sIGFyZ3VtZW50cykgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIF9fd2JpbmRnZW5faXNfc3RyaW5nKGFyZzApIHtcbiAgICB2YXIgcmV0ID0gdHlwZW9mKGdldE9iamVjdChhcmcwKSkgPT09ICdzdHJpbmcnO1xuICAgIHJldHVybiByZXQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9kZWJ1Z19zdHJpbmcoYXJnMCwgYXJnMSkge1xuICAgIHZhciByZXQgPSBkZWJ1Z1N0cmluZyhnZXRPYmplY3QoYXJnMSkpO1xuICAgIHZhciBwdHIwID0gcGFzc1N0cmluZ1RvV2FzbTAocmV0LCB3YXNtLl9fd2JpbmRnZW5fbWFsbG9jLCB3YXNtLl9fd2JpbmRnZW5fcmVhbGxvYyk7XG4gICAgdmFyIGxlbjAgPSBXQVNNX1ZFQ1RPUl9MRU47XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAxXSA9IGxlbjA7XG4gICAgZ2V0SW50MzJNZW1vcnkwKClbYXJnMCAvIDQgKyAwXSA9IHB0cjA7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl90aHJvdyhhcmcwLCBhcmcxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGdldFN0cmluZ0Zyb21XYXNtMChhcmcwLCBhcmcxKSk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9tZW1vcnkoKSB7XG4gICAgdmFyIHJldCA9IHdhc20ubWVtb3J5O1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9jbG9zdXJlX3dyYXBwZXI5ODgoYXJnMCwgYXJnMSwgYXJnMikge1xuICAgIHZhciByZXQgPSBtYWtlTXV0Q2xvc3VyZShhcmcwLCBhcmcxLCA0MTcsIF9fd2JnX2FkYXB0ZXJfMjYpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl9jbG9zdXJlX3dyYXBwZXI5OTAoYXJnMCwgYXJnMSwgYXJnMikge1xuICAgIHZhciByZXQgPSBtYWtlTXV0Q2xvc3VyZShhcmcwLCBhcmcxLCA0MTcsIF9fd2JnX2FkYXB0ZXJfMjkpO1xuICAgIHJldHVybiBhZGRIZWFwT2JqZWN0KHJldCk7XG59O1xuXG4iLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7IE9yYml0Q29udHJvbHMgfSBmcm9tIFwidGhyZWUvZXhhbXBsZXMvanNtL2NvbnRyb2xzL09yYml0Q29udHJvbHNcIjtcbmltcG9ydCB7IENTUzJEUmVuZGVyZXIgfSBmcm9tIFwidGhyZWUvZXhhbXBsZXMvanNtL3JlbmRlcmVycy9DU1MyRFJlbmRlcmVyXCI7XG5pbXBvcnQgeyBQb2ludDMsIFNldHVwRGF0YSwgU3BhY2VNZXRyaWMsIFRpY2tEYXRhIH0gZnJvbSBcIn4vcGtnXCI7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwifi90cy9yZW5kZXJlci9jb21wb25lbnRcIjtcbmltcG9ydCB7IE5vZGVNYXJrZXJzQ29tcG9uZW50IH0gZnJvbSBcIn4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9ub2RlTWFya2Vyc0NvbXBvbmVudFwiO1xuaW1wb3J0IHsgQ29ubmVjdGlvbk1hcmtlcnNDb21wb25lbnQgfSBmcm9tIFwifi90cy9yZW5kZXJlci9jb21wb25lbnRzL2Nvbm5lY3Rpb25NYXJrZXJzQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBCb2R5TWFya2Vyc0NvbXBvbmVudCB9IGZyb20gXCJ+L3RzL3JlbmRlcmVyL2NvbXBvbmVudHMvYm9keU1hcmtlcnNDb21wb25lbnRcIjtcbmV4cG9ydCBjbGFzcyBSZW5kZXJlciB7XG4gIHN0YXRpYyBNQVNURVJfU0NBTEUgPSAxZTUgLyAxLjQ5NmUxMTtcblxuICBzY2VuZTogVEhSRUUuU2NlbmU7XG4gIGNhbWVyYTogVEhSRUUuQ2FtZXJhO1xuICBjYW1lcmFDb250cm9sczogT3JiaXRDb250cm9scztcbiAgc2NlbmVSZW5kZXJlcjogVEhSRUUuV2ViR0xSZW5kZXJlcjtcbiAgbGFiZWxSZW5kZXJlcjogQ1NTMkRSZW5kZXJlcjtcblxuICBjb21wb25lbnRzOiBDb21wb25lbnRbXTtcblxuICBjb25zdHJ1Y3RvcihyZW5kZXJXcmFwcGVyOiBIVE1MRWxlbWVudCwgc2V0dXBEYXRhOiBTZXR1cERhdGEpIHtcbiAgICB0aGlzLnNjZW5lUmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcigpO1xuICAgIHRoaXMuc2NlbmVSZW5kZXJlci5zZXRTaXplKFxuICAgICAgcmVuZGVyV3JhcHBlci5jbGllbnRXaWR0aCxcbiAgICAgIHJlbmRlcldyYXBwZXIuY2xpZW50SGVpZ2h0XG4gICAgKTtcbiAgICByZW5kZXJXcmFwcGVyLmFwcGVuZENoaWxkKHRoaXMuc2NlbmVSZW5kZXJlci5kb21FbGVtZW50KTtcblxuICAgIHRoaXMubGFiZWxSZW5kZXJlciA9IG5ldyBDU1MyRFJlbmRlcmVyKCk7XG4gICAgdGhpcy5sYWJlbFJlbmRlcmVyLnNldFNpemUoXG4gICAgICByZW5kZXJXcmFwcGVyLmNsaWVudFdpZHRoLFxuICAgICAgcmVuZGVyV3JhcHBlci5jbGllbnRIZWlnaHRcbiAgICApO1xuICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLnRvcCA9IFwiMHB4XCI7XG4gICAgcmVuZGVyV3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzLmxhYmVsUmVuZGVyZXIuZG9tRWxlbWVudCk7XG5cbiAgICB0aGlzLmNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYShcbiAgICAgIDc1LFxuICAgICAgcmVuZGVyV3JhcHBlci5jbGllbnRXaWR0aCAvIHJlbmRlcldyYXBwZXIuY2xpZW50SGVpZ2h0XG4gICAgKTtcbiAgICB0aGlzLmNhbWVyYUNvbnRyb2xzID0gbmV3IE9yYml0Q29udHJvbHMoXG4gICAgICB0aGlzLmNhbWVyYSxcbiAgICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50XG4gICAgKTtcblxuICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnkgPSA1MDtcbiAgICB0aGlzLmNhbWVyYUNvbnRyb2xzLnVwZGF0ZSgpO1xuXG4gICAgdGhpcy5zY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xuXG4gICAgdGhpcy5zY2VuZS5hZGQobmV3IFRIUkVFLkF4ZXNIZWxwZXIoMSkpO1xuXG4gICAgdGhpcy5jb21wb25lbnRzID0gW1xuICAgICAgbmV3IE5vZGVNYXJrZXJzQ29tcG9uZW50KHRoaXMuc2NlbmUsIHNldHVwRGF0YSksXG4gICAgICBuZXcgQ29ubmVjdGlvbk1hcmtlcnNDb21wb25lbnQodGhpcy5zY2VuZSwgc2V0dXBEYXRhKSxcbiAgICAgIG5ldyBCb2R5TWFya2Vyc0NvbXBvbmVudCh0aGlzLnNjZW5lLCBzZXR1cERhdGEpLFxuICAgIF07XG5cbiAgICB0aGlzLnJlbmRlcigpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLnJlbmRlcigpKTtcbiAgICB0aGlzLnNjZW5lUmVuZGVyZXIucmVuZGVyKHRoaXMuc2NlbmUsIHRoaXMuY2FtZXJhKTtcbiAgICB0aGlzLmxhYmVsUmVuZGVyZXIucmVuZGVyKHRoaXMuc2NlbmUsIHRoaXMuY2FtZXJhKTtcbiAgfVxuXG4gIHVwZGF0ZShkYXRhOiBUaWNrRGF0YSkge1xuICAgIGZvciAoY29uc3QgY29tcG9uZW50IG9mIHRoaXMuY29tcG9uZW50cykge1xuICAgICAgY29tcG9uZW50LnVwZGF0ZShkYXRhKTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgc2ltUG9zVG9TY2VuZVBvcyhzdGF0ZVBvc2l0aW9uOiBQb2ludDM8U3BhY2VNZXRyaWM+KTogVEhSRUUuVmVjdG9yMyB7XG4gICAgcmV0dXJuIG5ldyBUSFJFRS5WZWN0b3IzKFxuICAgICAgc3RhdGVQb3NpdGlvbi54ICogUmVuZGVyZXIuTUFTVEVSX1NDQUxFLFxuICAgICAgc3RhdGVQb3NpdGlvbi55ICogUmVuZGVyZXIuTUFTVEVSX1NDQUxFLFxuICAgICAgc3RhdGVQb3NpdGlvbi56ICogUmVuZGVyZXIuTUFTVEVSX1NDQUxFXG4gICAgKTtcbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSBcInRocmVlXCI7XG5pbXBvcnQgeyBUaWNrRGF0YSB9IGZyb20gXCJ+L3BrZ1wiO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tcG9uZW50IHtcbiAgc2NlbmU6IFRIUkVFLlNjZW5lO1xuXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihzY2VuZTogVEhSRUUuU2NlbmUpIHtcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gIH1cblxuICBhYnN0cmFjdCB1cGRhdGUoZGF0YTogVGlja0RhdGEpO1xufVxuIiwidHlwZSBVbndyYXBBcnJheVR1cGxlPFR1cGxlIGV4dGVuZHMgWy4uLmFueVtdXT4gPSB7XG4gIFtJbmRleCBpbiBrZXlvZiBUdXBsZV06IFR1cGxlW0luZGV4XSBleHRlbmRzIChpbmZlciBUKVtdID8gVCA6IG5ldmVyO1xufSAmIHsgbGVuZ3RoOiBUdXBsZVtcImxlbmd0aFwiXSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gemlwPEFycmF5cyBleHRlbmRzIFsuLi5hbnlbXV0+KFxuICAuLi5hcnJheXM6IEFycmF5c1xuKTogVW53cmFwQXJyYXlUdXBsZTxBcnJheXM+W10ge1xuICByZXR1cm4gWy4uLmFycmF5c1swXS5rZXlzKCldLm1hcCgoaSkgPT5cbiAgICBhcnJheXMubWFwKChhcnJheSkgPT4gYXJyYXlbaV0pXG4gICkgYXMgVW53cmFwQXJyYXlUdXBsZTxBcnJheXM+W107XG59XG4iLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7IENTUzJET2JqZWN0IH0gZnJvbSBcInRocmVlL2V4YW1wbGVzL2pzbS9yZW5kZXJlcnMvQ1NTMkRSZW5kZXJlclwiO1xuaW1wb3J0IHsgQm9keSB9IGZyb20gXCJ+L3BrZ1wiO1xuaW1wb3J0IHsgUmVuZGVyZXIgfSBmcm9tIFwifi90cy9yZW5kZXJlclwiO1xuaW1wb3J0IHsgZ2V0Qm9keU1lc2ggfSBmcm9tIFwiLi9ib2R5TWVzaFwiO1xuXG5leHBvcnQgY2xhc3MgQm9keU1hcmtlciB7XG4gIHN0YXRpYyBCT0RZX1NDQUxFID0gMTtcblxuICBtZXNoOiBUSFJFRS5NZXNoO1xuICBsYWJlbDogQ1NTMkRPYmplY3Q7XG5cbiAgY29uc3RydWN0b3Ioc2NlbmU6IFRIUkVFLlNjZW5lLCBib2R5RGF0YTogQm9keSkge1xuICAgIHRoaXMubWVzaCA9IGdldEJvZHlNZXNoKGJvZHlEYXRhKTtcbiAgICBzY2VuZS5hZGQodGhpcy5tZXNoKTtcblxuICAgIGNvbnN0IGxhYmVsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBsYWJlbERpdi5jbGFzc05hbWUgPSBcInRleHQtbGlnaHRcIjtcbiAgICBsYWJlbERpdi50ZXh0Q29udGVudCA9IGJvZHlEYXRhLm5hbWU7XG4gICAgdGhpcy5sYWJlbCA9IG5ldyBDU1MyRE9iamVjdChsYWJlbERpdik7XG4gICAgdGhpcy5sYWJlbC5wb3NpdGlvbi5zZXQoMCwgMCwgMCk7XG4gICAgdGhpcy5tZXNoLmFkZCh0aGlzLmxhYmVsKTtcbiAgfVxuXG4gIHVwZGF0ZShkYXRhOiBCb2R5KSB7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLmNvcHkoUmVuZGVyZXIuc2ltUG9zVG9TY2VuZVBvcyhkYXRhLnBvc2l0aW9uKSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IFJlbmRlcmVyIH0gZnJvbSBcIn4vdHMvcmVuZGVyZXJcIjtcbmltcG9ydCB7IFNldHVwRGF0YSwgVGlja0RhdGEgfSBmcm9tIFwifi9wa2dcIjtcbmltcG9ydCB7IFZlY3RvcjMgfSBmcm9tIFwidGhyZWVcIjtcblxubGV0IHJlbmRlcmVyOiBSZW5kZXJlcjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwKGRhdGE6IFNldHVwRGF0YSkge1xuICByZW5kZXJlciA9IG5ldyBSZW5kZXJlcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlbmRlcmVyLXdyYXBwZXJcIiksIGRhdGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGljayhkYXRhOiBUaWNrRGF0YSkge1xuICByZW5kZXJlci51cGRhdGUoZGF0YSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDYW1lcmFQb3NpdGlvbigpOiBWZWN0b3IzIHtcbiAgcmV0dXJuIHJlbmRlcmVyLmNhbWVyYS5wb3NpdGlvbi5jbG9uZSgpLmRpdmlkZVNjYWxhcihSZW5kZXJlci5NQVNURVJfU0NBTEUpO1xufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSBcIn4vdHMvcmVuZGVyZXIvY29tcG9uZW50XCI7XG5pbXBvcnQgeyBTZXR1cERhdGEsIFRpY2tEYXRhIH0gZnJvbSBcIn4vcGtnXCI7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7IE5vZGVNYXJrZXIgfSBmcm9tIFwifi90cy9yZW5kZXJlci9jb21wb25lbnRzL25vZGVNYXJrZXJzQ29tcG9uZW50L25vZGVNYXJrZXJcIjtcbmltcG9ydCB7IHppcCB9IGZyb20gXCJ+L3RzL3V0aWxzXCI7XG5cbmV4cG9ydCBjbGFzcyBOb2RlTWFya2Vyc0NvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gIG1hcmtlcnM6IE5vZGVNYXJrZXJbXTtcblxuICBjb25zdHJ1Y3RvcihzY2VuZTogVEhSRUUuU2NlbmUsIHNldHVwRGF0YTogU2V0dXBEYXRhKSB7XG4gICAgc3VwZXIoc2NlbmUpO1xuXG4gICAgdGhpcy5tYXJrZXJzID0gemlwKHNldHVwRGF0YS5ub2RlcykubWFwKFxuICAgICAgKFtub2RlLCBwYXRoXSkgPT4gbmV3IE5vZGVNYXJrZXIodGhpcy5zY2VuZSwgbm9kZSlcbiAgICApO1xuICB9XG5cbiAgdXBkYXRlKGRhdGE6IFRpY2tEYXRhKSB7XG4gICAgZm9yIChjb25zdCBbbWFya2VyLCBub2RlLCBtZXNzYWdlQnVmZmVyT2NjdXBhbmN5XSBvZiB6aXAoXG4gICAgICB0aGlzLm1hcmtlcnMsXG4gICAgICBkYXRhLm5vZGVzLFxuICAgICAgZGF0YS5tZXNzYWdlQnVmZmVyT2NjdXBhbmNpZXNcbiAgICApKSB7XG4gICAgICBtYXJrZXIudXBkYXRlKG5vZGUsIG1lc3NhZ2VCdWZmZXJPY2N1cGFuY3kpO1xuICAgICAgbWFya2VyLm9jY2x1ZGVkID0gZmFsc2U7XG4gICAgICBtYXJrZXIuaGlnaGxpZ2h0ZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGNyZWF0aW5nTm9kZUluZGV4IG9mIGRhdGEuY3JlYXRpbmdOb2RlSW5kaWNlcykge1xuICAgICAgdGhpcy5tYXJrZXJzW2NyZWF0aW5nTm9kZUluZGV4XS5hZGRTcGxhc2gobmV3IFRIUkVFLkNvbG9yKFwiZ3JlZW5cIikpO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgY3JlYXRpbmdOb2RlSW5kZXggb2YgZGF0YS5kZWxpdmVyaW5nTm9kZUluZGljZXMpIHtcbiAgICAgIHRoaXMubWFya2Vyc1tjcmVhdGluZ05vZGVJbmRleF0uYWRkU3BsYXNoKFxuICAgICAgICBuZXcgVEhSRUUuQ29sb3IoXCJncmVlblwiKSxcbiAgICAgICAgZmFsc2VcbiAgICAgICk7XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBvY2NsdWRlZE5vZGVJbmRleCBvZiBkYXRhLm9jY2x1ZGVkTm9kZUluZGljZXMpIHtcbiAgICAgIHRoaXMubWFya2Vyc1tvY2NsdWRlZE5vZGVJbmRleF0ub2NjbHVkZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChkYXRhLmhpZ2hsaWdodGVkTm9kZUluZGV4ICE9IG51bGwpIHtcbiAgICAgIHRoaXMubWFya2Vyc1tkYXRhLmhpZ2hsaWdodGVkTm9kZUluZGV4XS5oaWdobGlnaHRlZCA9IHRydWVcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gXCJ0aHJlZVwiO1xuaW1wb3J0IHtOb2RlLCBQb2ludDMsIFNwYWNlTWV0cmljfSBmcm9tIFwifi9wa2dcIjtcbmltcG9ydCB7Q1NTMkRPYmplY3R9IGZyb20gXCJ0aHJlZS9leGFtcGxlcy9qc20vcmVuZGVyZXJzL0NTUzJEUmVuZGVyZXJcIjtcbmltcG9ydCB7UmVuZGVyZXJ9IGZyb20gXCJ+L3RzL3JlbmRlcmVyXCI7XG5pbXBvcnQge1NwbGFzaH0gZnJvbSBcIn4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9ub2RlTWFya2Vyc0NvbXBvbmVudC9zcGxhc2hcIjtcblxuZXhwb3J0IGNsYXNzIE5vZGVNYXJrZXIge1xuICAgIG1lc2g6IFRIUkVFLk1lc2g7XG5cbiAgICBsYWJlbERpdjogSFRNTERpdkVsZW1lbnQ7XG4gICAgbGFiZWw6IENTUzJET2JqZWN0O1xuXG4gICAgcGF0aDogVEhSRUUuTGluZTtcbiAgICBwYXRoUG9pbnRzOiBUSFJFRS5WZWN0b3IzW10gPSBbXTtcblxuICAgIHNwbGFzaGVzOiBTcGxhc2hbXSA9IFtdO1xuXG4gICAgb2NjdXBhbmN5QmFyOiBIVE1MRGl2RWxlbWVudDtcblxuICAgIHVwZGF0ZUluZGV4ID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBUSFJFRS5TY2VuZSwgbm9kZURhdGE6IE5vZGUpIHtcbiAgICAgICAgdGhpcy5tZXNoID0gbmV3IFRIUkVFLk1lc2goKTtcbiAgICAgICAgc2NlbmUuYWRkKHRoaXMubWVzaCk7XG5cbiAgICAgICAgdGhpcy5wYXRoID0gbmV3IFRIUkVFLkxpbmUoXG4gICAgICAgICAgICBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKSxcbiAgICAgICAgICAgIG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6IDB4ZmYwMDAwfSlcbiAgICAgICAgKTtcblxuICAgICAgICBzY2VuZS5hZGQodGhpcy5wYXRoKTtcblxuICAgICAgICB0aGlzLmxhYmVsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgICAgICB0aGlzLmxhYmVsRGl2LmlubmVySFRNTCA9IGBcbjxkaXYgY2xhc3M9XCJjb2xcIiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgd2lkdGg6IDEwMHB4OyBoZWlnaHQ6IDEuNWVtO1wiPlxuICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcyB3LTEwMCBoLTEwMCBwb3NpdGlvbi1hYnNvbHV0ZSB0b3AtMCBzdGFydC0wXCI+XG4gICAgICAgIDxkaXYgaWQ9XCIke25vZGVEYXRhLm5hbWV9LW9jY3VwYW5jeS1iYXJcIiBjbGFzcz1cInByb2dyZXNzLWJhciBiZy1wcmltYXJ5XCIgc3R5bGU9XCJ6LWluZGV4OiBpbmhlcml0XCI+PC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInctMTAwIHRleHQtY2VudGVyIHBvc2l0aW9uLWFic29sdXRlIHRvcC01MCBzdGFydC01MCB0cmFuc2xhdGUtbWlkZGxlXCI+JHtub2RlRGF0YS5uYW1lfTwvZGl2PlxuPC9kaXY+XG5gO1xuXG4gICAgICAgIHRoaXMubGFiZWwgPSBuZXcgQ1NTMkRPYmplY3QodGhpcy5sYWJlbERpdik7XG4gICAgICAgIHRoaXMubGFiZWwucG9zaXRpb24uc2V0KDAsIDAsIDApO1xuICAgICAgICB0aGlzLm1lc2guYWRkKHRoaXMubGFiZWwpO1xuICAgIH1cblxuICAgIGFkZFNwbGFzaChjb2xvcjogVEhSRUUuQ29sb3IsIGV4cGFuZGluZyA9IHRydWUpIHtcbiAgICAgICAgdGhpcy5zcGxhc2hlcy5wdXNoKG5ldyBTcGxhc2godGhpcy5tZXNoLCBjb2xvciwgZXhwYW5kaW5nKSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKGRhdGE6IE5vZGUsIGJ1ZmZlck9jY3VwYW5jeTogbnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IHBvc2l0aW9uID0gUmVuZGVyZXIuc2ltUG9zVG9TY2VuZVBvcyhkYXRhLnBvc2l0aW9uKTtcbiAgICAgICAgdGhpcy5tZXNoLnBvc2l0aW9uLmNvcHkocG9zaXRpb24pO1xuXG4gICAgICAgIGlmICh0aGlzLnVwZGF0ZUluZGV4ICUgMTAgPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5wYXRoUG9pbnRzLnB1c2gocG9zaXRpb24pO1xuICAgICAgICAgICAgaWYgKHRoaXMucGF0aFBvaW50cy5sZW5ndGggPiAxMDAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXRoUG9pbnRzLnNoaWZ0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXRoLmdlb21ldHJ5LnNldEZyb21Qb2ludHModGhpcy5wYXRoUG9pbnRzKTtcblxuICAgICAgICBmb3IgKGNvbnN0IHNwbGFzaCBvZiB0aGlzLnNwbGFzaGVzKSB7XG4gICAgICAgICAgICBzcGxhc2gudXBkYXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNwbGFzaGVzID0gdGhpcy5zcGxhc2hlcy5maWx0ZXIoKHNwbGFzaCkgPT4gc3BsYXNoLmFsaXZlKTtcblxuICAgICAgICBpZiAodGhpcy5vY2N1cGFuY3lCYXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5vY2N1cGFuY3lCYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgICAgICAgICAgICAgICBgJHtkYXRhLm5hbWV9LW9jY3VwYW5jeS1iYXJgXG4gICAgICAgICAgICApIGFzIEhUTUxEaXZFbGVtZW50O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub2NjdXBhbmN5QmFyLnN0eWxlLndpZHRoID0gYnVmZmVyT2NjdXBhbmN5ICogMTAwICsgXCIlXCI7XG4gICAgICAgIHRoaXMudXBkYXRlSW5kZXgrKztcbiAgICB9XG5cbiAgICBzZXQgb2NjbHVkZWQob2NjbHVkZWQ6IGJvb2xlYW4pIHtcbiAgICAgICAgY29uc3QgW29wYWNpdHksIGNsYXNzTmFtZV0gPSBvY2NsdWRlZCA/XG4gICAgICAgICAgICBbXCIwLjVcIiwgXCJwcm9ncmVzcy1iYXIgYmctc2Vjb25kYXJ5XCJdIDpcbiAgICAgICAgICAgIFtcIjFcIiwgXCJwcm9ncmVzcy1iYXJcIl1cblxuICAgICAgICB0aGlzLmxhYmVsRGl2LnN0eWxlLm9wYWNpdHkgPSBvcGFjaXR5O1xuICAgICAgICBpZiAodGhpcy5vY2N1cGFuY3lCYXIgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5vY2N1cGFuY3lCYXIuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0IGhpZ2hsaWdodGVkKGhpZ2hsaWdodGVkOiBib29sZWFuKSB7XG4gICAgICAgIGNvbnN0IHNoYWRvdyA9IGhpZ2hsaWdodGVkID9cbiAgICAgICAgICAgIFwiMCAwIDMwcHggd2hpdGVcIiA6IFwibm9uZVwiXG5cbiAgICAgICAgdGhpcy5sYWJlbERpdi5zdHlsZS5ib3hTaGFkb3cgPSBzaGFkb3dcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBDU1MyRE9iamVjdCB9IGZyb20gXCJ0aHJlZS9leGFtcGxlcy9qc20vcmVuZGVyZXJzL0NTUzJEUmVuZGVyZXJcIjtcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gXCJ0aHJlZVwiO1xuXG5leHBvcnQgY2xhc3MgU3BsYXNoIHtcbiAgY3NzT2JqZWN0OiBDU1MyRE9iamVjdDtcbiAgbGlmZSA9IDE7XG4gIGh0bWxFbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcbiAgYWxpdmUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBtZXNoOiBUSFJFRS5NZXNoLFxuICAgIHB1YmxpYyBjb2xvcjogVEhSRUUuQ29sb3IsXG4gICAgcHVibGljIGV4cGFuZGluZyA9IHRydWVcbiAgKSB7XG4gICAgdGhpcy5odG1sRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS5ib3JkZXJSYWRpdXMgPSBcIjUwJVwiO1xuICAgIHRoaXMuaHRtbEVsZW1lbnQuc3R5bGUuYm9yZGVyU3R5bGUgPSBcInNvbGlkXCI7XG4gICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS56SW5kZXggPSBcIjFcIjtcbiAgICB0aGlzLmNzc09iamVjdCA9IG5ldyBDU1MyRE9iamVjdCh0aGlzLmh0bWxFbGVtZW50KTtcbiAgICB0aGlzLnVwZGF0ZVN0eWxlKCk7XG5cbiAgICB0aGlzLm1lc2guYWRkKHRoaXMuY3NzT2JqZWN0KTtcbiAgfVxuXG4gIHVwZGF0ZVN0eWxlKCkge1xuICAgIHRoaXMuaHRtbEVsZW1lbnQuc3R5bGUuYm9yZGVyQ29sb3IgPSBgcmdiYSgke3RoaXMuY29sb3IuciAqIDI1NX0sICR7XG4gICAgICB0aGlzLmNvbG9yLmcgKiAyNTVcbiAgICB9LCAke3RoaXMuY29sb3IuYiAqIDI1NX0sICR7dGhpcy5saWZlICogMn0pYDtcbiAgICBjb25zdCBzaXplID0gMTAwICogKHRoaXMuZXhwYW5kaW5nID8gMSAtIHRoaXMubGlmZSA6IHRoaXMubGlmZSk7XG4gICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS53aWR0aCA9IHNpemUgKyBcInB4XCI7XG4gICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS5oZWlnaHQgPSBzaXplICsgXCJweFwiO1xuICAgIHRoaXMuaHRtbEVsZW1lbnQuc3R5bGUuYm9yZGVyV2lkdGggPVxuICAgICAgMTAgKiAodGhpcy5leHBhbmRpbmcgPyB0aGlzLmxpZmUgOiAxIC0gdGhpcy5saWZlKSArIFwicHhcIjtcbiAgfVxuXG4gIHVwZGF0ZSgpIHtcbiAgICB0aGlzLmxpZmUgKj0gMC45O1xuICAgIHRoaXMudXBkYXRlU3R5bGUoKTtcbiAgICBpZiAodGhpcy5saWZlIDwgMC4wMSkge1xuICAgICAgdGhpcy5hbGl2ZSA9IGZhbHNlO1xuICAgICAgdGhpcy5tZXNoLnJlbW92ZSh0aGlzLmNzc09iamVjdCk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwifi90cy9yZW5kZXJlci9jb21wb25lbnRcIjtcbmltcG9ydCB7IFNldHVwRGF0YSwgVGlja0RhdGEgfSBmcm9tIFwifi9wa2dcIjtcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gXCJ0aHJlZVwiO1xuaW1wb3J0IHsgUmVuZGVyZXIgfSBmcm9tIFwifi90cy9yZW5kZXJlclwiO1xuaW1wb3J0IHsgQ29ubmVjdGlvbk1hcmtlciB9IGZyb20gXCIuL2Nvbm5lY3Rpb25NYXJrZXJcIjtcblxuZXhwb3J0IGNsYXNzIENvbm5lY3Rpb25NYXJrZXJzQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgbWFya2VyczogQ29ubmVjdGlvbk1hcmtlcltdW107XG5cbiAgY29uc3RydWN0b3Ioc2NlbmU6IFRIUkVFLlNjZW5lLCBzZXR1cERhdGE6IFNldHVwRGF0YSkge1xuICAgIHN1cGVyKHNjZW5lKTtcbiAgICB0aGlzLm1hcmtlcnMgPSBbXTtcbiAgfVxuXG4gIHVwZGF0ZShkYXRhOiBUaWNrRGF0YSkge1xuICAgIGZvciAoY29uc3QgbWFya2VycyBvZiB0aGlzLm1hcmtlcnMpIHtcbiAgICAgIGlmIChtYXJrZXJzICE9IG51bGwpIHtcbiAgICAgICAgZm9yIChjb25zdCBtYXJrZXIgb2YgbWFya2Vycykge1xuICAgICAgICAgIGlmIChtYXJrZXIgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFya2VyLnVwZGF0ZSgpO1xuICAgICAgICAgICAgbWFya2VyLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IFtpbmRleDEsIGluZGV4Ml0gb2YgZGF0YS5jb25uZWN0YWJsZU5vZGVJbmRpY2VzKSB7XG4gICAgICBjb25zdCBtYXJrZXIgPSB0aGlzLmdldE1hcmtlcihpbmRleDEsIGluZGV4Mik7XG4gICAgICBtYXJrZXIudmlzaWJsZSA9IHRydWU7XG4gICAgICBtYXJrZXIucG9pbnRzID0gW1xuICAgICAgICBSZW5kZXJlci5zaW1Qb3NUb1NjZW5lUG9zKGRhdGEubm9kZXNbaW5kZXgxXS5wb3NpdGlvbiksXG4gICAgICAgIFJlbmRlcmVyLnNpbVBvc1RvU2NlbmVQb3MoZGF0YS5ub2Rlc1tpbmRleDJdLnBvc2l0aW9uKSxcbiAgICAgIF07XG4gICAgICAvLyBsaW5lLm1hdGVyaWFsID0gQ29ubmVjdGlvbk1hcmtlcnNDb21wb25lbnQuY29ubmVjdGluZ0xpbmVNYXRlcmlhbDtcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IFtpbmRleDEsIGluZGV4Ml0gb2YgZGF0YS5zZW5kaW5nTm9kZUluZGljZXMpIHtcbiAgICAgIGNvbnN0IGxpbmUgPSB0aGlzLmdldE1hcmtlcihpbmRleDEsIGluZGV4Mik7XG4gICAgICBsaW5lLnNlbmRpbmcgPSAxO1xuICAgICAgLy8gbGluZS5tYXRlcmlhbCA9IENvbm5lY3Rpb25NYXJrZXJzQ29tcG9uZW50LnNlbmRpbmdMaW5lTWF0ZXJpYWw7XG4gICAgfVxuICB9XG5cbiAgZ2V0TWFya2VyKGluZGV4MTogbnVtYmVyLCBpbmRleDI6IG51bWJlcik6IENvbm5lY3Rpb25NYXJrZXIge1xuICAgIGxldCBtYXJrZXJzID0gdGhpcy5tYXJrZXJzW2luZGV4MV07XG4gICAgaWYgKG1hcmtlcnMgPT0gbnVsbCkge1xuICAgICAgbWFya2VycyA9IHRoaXMubWFya2Vyc1tpbmRleDFdID0gW107XG4gICAgfVxuICAgIGxldCBtYXJrZXIgPSBtYXJrZXJzW2luZGV4Ml07XG4gICAgaWYgKG1hcmtlciA9PSBudWxsKSB7XG4gICAgICBtYXJrZXIgPSBtYXJrZXJzW2luZGV4Ml0gPSBuZXcgQ29ubmVjdGlvbk1hcmtlcih0aGlzLnNjZW5lKTtcbiAgICB9XG4gICAgcmV0dXJuIG1hcmtlcjtcbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSBcInRocmVlXCI7XG5cbmV4cG9ydCBjbGFzcyBDb25uZWN0aW9uTWFya2VyIHtcbiAgc3RhdGljIGNvbm5lY3RpbmdMaW5lQ29sb3IgPSBuZXcgVEhSRUUuQ29sb3IoMHgwMDAwZmYpO1xuICBzdGF0aWMgc2VuZGluZ0xpbmVDb2xvciA9IG5ldyBUSFJFRS5Db2xvcigweDAwZmYwMCk7XG5cbiAgbGluZTogVEhSRUUuTGluZTtcbiAgbGluZU1hdGVyaWFsOiBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbDtcbiAgc2VuZGluZzogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHNjZW5lOiBUSFJFRS5TY2VuZSkge1xuICAgIHRoaXMubGluZU1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtcbiAgICAgIGNvbG9yOiBDb25uZWN0aW9uTWFya2VyLmNvbm5lY3RpbmdMaW5lQ29sb3IuY2xvbmUoKSxcbiAgICB9KTtcbiAgICB0aGlzLmxpbmUgPSBuZXcgVEhSRUUuTGluZSh1bmRlZmluZWQsIHRoaXMubGluZU1hdGVyaWFsKTtcbiAgICBzY2VuZS5hZGQodGhpcy5saW5lKTtcbiAgICB0aGlzLnNlbmRpbmcgPSAwO1xuICB9XG5cbiAgc2V0IHBvaW50cyhwb2ludHM6IFRIUkVFLlZlY3RvcjNbXSkge1xuICAgIHRoaXMubGluZS5nZW9tZXRyeS5zZXRGcm9tUG9pbnRzKHBvaW50cyk7XG4gIH1cblxuICBzZXQgdmlzaWJsZSh2aXNpYmxlOiBib29sZWFuKSB7XG4gICAgdGhpcy5saW5lLnZpc2libGUgPSB2aXNpYmxlO1xuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIHRoaXMuc2VuZGluZyAqPSAwLjk7XG4gICAgdGhpcy5saW5lTWF0ZXJpYWwuY29sb3IgPSBDb25uZWN0aW9uTWFya2VyLmNvbm5lY3RpbmdMaW5lQ29sb3JcbiAgICAgIC5jbG9uZSgpXG4gICAgICAubGVycChDb25uZWN0aW9uTWFya2VyLnNlbmRpbmdMaW5lQ29sb3IsIHRoaXMuc2VuZGluZyk7XG4gIH1cbn1cbiIsImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJ+L3RzL3JlbmRlcmVyL2NvbXBvbmVudFwiO1xuaW1wb3J0IHsgU2V0dXBEYXRhLCBUaWNrRGF0YSB9IGZyb20gXCJ+L3BrZ1wiO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSBcInRocmVlXCI7XG5pbXBvcnQgeyBOb2RlTWFya2VyIH0gZnJvbSBcIn4vdHMvcmVuZGVyZXIvY29tcG9uZW50cy9ub2RlTWFya2Vyc0NvbXBvbmVudC9ub2RlTWFya2VyXCI7XG5pbXBvcnQgeyB6aXAgfSBmcm9tIFwifi90cy91dGlsc1wiO1xuaW1wb3J0IHsgQm9keU1hcmtlciB9IGZyb20gXCJ+L3RzL3JlbmRlcmVyL2NvbXBvbmVudHMvYm9keU1hcmtlcnNDb21wb25lbnQvYm9keU1hcmtlclwiO1xuXG5leHBvcnQgY2xhc3MgQm9keU1hcmtlcnNDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICBtYXJrZXJzOiBCb2R5TWFya2VyW107XG5cbiAgY29uc3RydWN0b3Ioc2NlbmU6IFRIUkVFLlNjZW5lLCBzZXR1cERhdGE6IFNldHVwRGF0YSkge1xuICAgIHN1cGVyKHNjZW5lKTtcblxuICAgIHRoaXMubWFya2VycyA9IHNldHVwRGF0YS5ib2RpZXMubWFwKFxuICAgICAgKGJvZHkpID0+IG5ldyBCb2R5TWFya2VyKHRoaXMuc2NlbmUsIGJvZHkpXG4gICAgKTtcbiAgfVxuXG4gIHVwZGF0ZShkYXRhOiBUaWNrRGF0YSkge1xuICAgIGZvciAoY29uc3QgW21hcmtlciwgYm9keV0gb2YgemlwKHRoaXMubWFya2VycywgZGF0YS5ib2RpZXMpKSB7XG4gICAgICBtYXJrZXIudXBkYXRlKGJvZHkpO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSBcInRocmVlXCI7XG5pbXBvcnQgeyBSZW5kZXJlciB9IGZyb20gXCJ+L3RzL3JlbmRlcmVyXCI7XG5pbXBvcnQgeyBCb2R5TWFya2VyIH0gZnJvbSBcIi4vYm9keU1hcmtlclwiO1xuaW1wb3J0IHsgQm9keSB9IGZyb20gXCJ+L3BrZ1wiO1xuXG5jb25zdCBkZWZhdWx0TWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoeyBjb2xvcjogMHgwMGZmMDAgfSk7XG5jb25zdCB0ZXh0dXJlTG9hZGVyID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJvZHlNZXNoKGJvZHk6IEJvZHkpOiBUSFJFRS5NZXNoIHtcbiAgY29uc3QgbmFtZSA9IGJvZHkubmFtZS50b0xvd2VyQ2FzZSgpO1xuICBjb25zdCBtYXRlcmlhbEZhY3RvcnkgPSBtYXRlcmlhbEZhY3Rvcmllc1tuYW1lXTtcbiAgcmV0dXJuIG5ldyBUSFJFRS5NZXNoKFxuICAgIGdldFNwaGVyZUdlb21ldHJ5KGJvZHkucmFkaXVzKSxcbiAgICBtYXRlcmlhbEZhY3RvcnkgPyBtYXRlcmlhbEZhY3RvcnkobmFtZSkgOiBkZWZhdWx0TWF0ZXJpYWxcbiAgKTtcbn1cblxuZnVuY3Rpb24gZ2V0U3BoZXJlR2VvbWV0cnkocmFkaXVzOiBudW1iZXIpIHtcbiAgcmV0dXJuIG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeShcbiAgICByYWRpdXMgKiBSZW5kZXJlci5NQVNURVJfU0NBTEUgKiBCb2R5TWFya2VyLkJPRFlfU0NBTEUsXG4gICAgNjQsXG4gICAgMzJcbiAgKTtcbn1cblxuY29uc3QgbWF0ZXJpYWxGYWN0b3JpZXM6IHtcbiAgW25hbWU6IHN0cmluZ106IChuYW1lOiBzdHJpbmcpID0+IFRIUkVFLk1hdGVyaWFsIHwgVEhSRUUuTWF0ZXJpYWxbXTtcbn0gPSB7XG4gIG1lcmN1cnk6IGdldENvbG9yTWF0ZXJpYWwsXG4gIHZlbnVzOiBnZXRDb2xvck1hdGVyaWFsLFxuICBlYXJ0aDogZ2V0Q29sb3JNYXRlcmlhbCxcbiAgLy8gZWFydGg6ICgpID0+IChbXG4gIC8vICAgZ2V0Q29sb3JNYXRlcmlhbCgnZWFydGgnKSxcbiAgLy8gICBnZXRDb2xvck1hdGVyaWFsKCdjbG91ZHMnLCB0cnVlKSxcbiAgLy8gXSksXG4gIG1hcnM6IGdldENvbG9yTWF0ZXJpYWwsXG4gIGp1cGl0ZXI6IGdldENvbG9yTWF0ZXJpYWwsXG4gIHNhdHVybjogKCkgPT4gW1xuICAgIGdldENvbG9yTWF0ZXJpYWwoXCJzYXR1cm5cIiksXG4gICAgZ2V0Q29sb3JNYXRlcmlhbChcInNhdHVybl9yaW5nXCIsIGZhbHNlLCBUSFJFRS5Eb3VibGVTaWRlKSxcbiAgXSxcbiAgdXJhbnVzOiBnZXRDb2xvck1hdGVyaWFsLFxuICBuZXB0dW5lOiBnZXRDb2xvck1hdGVyaWFsLFxufTtcblxuZnVuY3Rpb24gZ2V0Q29sb3JNYXRlcmlhbChcbiAgbmFtZTogc3RyaW5nLFxuICBhbHBoYU1hcCA9IGZhbHNlLFxuICBzaWRlID0gVEhSRUUuRnJvbnRTaWRlXG4pIHtcbiAgcmV0dXJuIG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7XG4gICAgbWFwOiB0ZXh0dXJlTG9hZGVyLmxvYWQoYC90ZXh0dXJlcy8ke25hbWV9X2NvbG9yLmpwZ2ApLFxuICAgIGFscGhhTWFwOiBhbHBoYU1hcFxuICAgICAgPyB0ZXh0dXJlTG9hZGVyLmxvYWQoYC90ZXh0dXJlcy8ke25hbWV9X2FscGhhLmpwZ2ApXG4gICAgICA6IG51bGwsXG4gICAgdHJhbnNwYXJlbnQ6IGFscGhhTWFwLFxuICAgIHNpZGUsXG4gIH0pO1xufVxuIiwiZnVuY3Rpb24gd2VicGFja0VtcHR5Q29udGV4dChyZXEpIHtcblx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdHRocm93IGU7XG59XG53ZWJwYWNrRW1wdHlDb250ZXh0LmtleXMgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFtdOyB9O1xud2VicGFja0VtcHR5Q29udGV4dC5yZXNvbHZlID0gd2VicGFja0VtcHR5Q29udGV4dDtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0VtcHR5Q29udGV4dDtcbndlYnBhY2tFbXB0eUNvbnRleHQuaWQgPSAyOTsiLCJpbXBvcnQgKiBhcyB3YXNtIGZyb20gXCIuL2luZGV4X2JnLndhc21cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4X2JnLmpzXCI7XG53YXNtLl9fd2JpbmRnZW5fc3RhcnQoKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=